{
  "openapi": "3.1.0",
  "info": {
    "title": "Regis API",
    "description": "API para gerenciamento de chaves de API, aplicações, autenticação e check-in no sistema ByeFive",
    "version": "1.0.0",
    "contact": {
      "name": "ByeFive Suporte",
      "email": "suporte@byefive.com.br"
    }
  },
  "servers": [
    {
      "url": "https://regis.app.staging.byefive.com.br/rest",
      "description": "Servidor de Staging"
    },
    {
      "url": "https://regis.app.production.byefive.com.br/rest",
      "description": "Servidor de Produção"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/api-keys": {
      "get": {
        "summary": "Listar API Keys",
        "description": "Lista todas as chaves de API com suporte a busca e paginação",
        "operationId": "listApiKeys",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "Termo de busca em name, description, pathRoute e groupName",
            "schema": {
              "type": "string",
              "example": "marca"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Número da página atual",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "example": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Quantidade de itens por página",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1,
              "example": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de API Keys retornada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyListResponse"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedResponse"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "summary": "Criar API Key",
        "description": "Cria uma nova chave de API",
        "operationId": "createApiKey",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateApiKeyRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "API Key criada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequestResponse"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedResponse"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api-keys/{id}": {
      "get": {
        "summary": "Obter API Key por ID",
        "description": "Obtém uma API Key específica pelo seu ID",
        "operationId": "getApiKeyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID da API Key (formato: apk_...)",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^apk_[A-Z0-9]+$",
              "example": "apk_01J140PN98KZHT9R273B5TCHD4"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "API Key retornada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyResponse"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedResponse"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundResponse"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "summary": "Atualizar API Key",
        "description": "Atualiza uma API Key existente",
        "operationId": "updateApiKey",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID da API Key (formato: apk_...)",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^apk_[A-Z0-9]+$",
              "example": "apk_01J0GN2AQ16TASJ9W3KQW0Z06H"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateApiKeyRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "API Key atualizada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequestResponse"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedResponse"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundResponse"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "summary": "Remover API Key",
        "description": "Remove uma API Key pelo seu ID",
        "operationId": "deleteApiKey",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID da API Key (formato: apk_...)",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^apk_[A-Z0-9]+$",
              "example": "apk_01J0GQX62GRDXCKNVZRPHAA65N"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "API Key removida com sucesso"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedResponse"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundResponse"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/applications": {
      "get": {
        "summary": "Listar Releases",
        "description": "Lista todos os releases de aplicações",
        "operationId": "listReleases",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "Campos a serem retornados (separados por hífen)",
            "schema": {
              "type": "string",
              "example": "id-name-version-createdAt-updatedAt-links"
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Termo de busca no nome da aplicação",
            "schema": {
              "type": "string",
              "example": "app"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Número da página atual",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "example": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Quantidade de itens por página",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1,
              "example": 10
            }
          },
          {
            "name": "orderBy",
            "in": "query",
            "description": "Campo e direção da ordenação (ex: name-asc, createdAt-desc)",
            "schema": {
              "type": "string",
              "enum": [
                "name-asc",
                "name-desc",
                "createdAt-asc",
                "createdAt-desc",
                "updatedAt-asc",
                "updatedAt-desc"
              ],
              "example": "createdAt-asc"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de releases retornada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReleaseListResponse"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedResponse"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "summary": "Criar Release",
        "description": "Cria um novo release de aplicação",
        "operationId": "createRelease",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateReleaseRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Release criado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReleaseResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequestResponse"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedResponse"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/applications/{id}": {
      "get": {
        "summary": "Obter Release por ID",
        "description": "Obtém um release específico pelo seu ID",
        "operationId": "getReleaseById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID do Release (formato: appr_...)",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^appr_[A-Z0-9]+$",
              "example": "appr_01J13XB4TYYMASP3J5NGKEYSVB"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Release retornado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReleaseResponse"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedResponse"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundResponse"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "summary": "Atualizar Release",
        "description": "Atualiza um release existente",
        "operationId": "updateRelease",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID do Release (formato: appr_...)",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^appr_[A-Z0-9]+$",
              "example": "appr_01J0RQ8KZG9EHEPWXGNK3J68A4"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateReleaseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Release atualizado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReleaseResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequestResponse"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedResponse"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundResponse"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/applications-version": {
      "get": {
        "summary": "Listar Versões",
        "description": "Lista todas as versões de aplicações",
        "operationId": "listVersions",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "Campos a serem retornados (separados por hífen)",
            "schema": {
              "type": "string",
              "example": "id-version-createdAt"
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Termo de busca (pode ser ID do release)",
            "schema": {
              "type": "string",
              "example": "appr_01J13XB4TYYMASP3J5NGKEYSVB"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Número da página atual",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "example": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Quantidade de itens por página",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1,
              "example": 50
            }
          },
          {
            "name": "orderBy",
            "in": "query",
            "description": "Campo e direção da ordenação",
            "schema": {
              "type": "string",
              "enum": [
                "name-asc",
                "name-desc",
                "createdAt-asc",
                "createdAt-desc",
                "updatedAt-asc",
                "updatedAt-desc"
              ],
              "example": "createdAt-asc"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de versões retornada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VersionListResponse"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedResponse"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "summary": "Criar Versão",
        "description": "Cria uma nova versão de aplicação",
        "operationId": "createVersion",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateVersionRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Versão criada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VersionResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequestResponse"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedResponse"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/applications-version/{id}": {
      "get": {
        "summary": "Obter Versão por ID",
        "description": "Obtém uma versão específica pelo seu ID",
        "operationId": "getVersionById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID da Versão (formato: appv_...)",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^appv_[A-Z0-9]+$",
              "example": "appv_01J13XR0T1Z5CNJGVA73EC3XY4"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Versão retornada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VersionResponse"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedResponse"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundResponse"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "summary": "Atualizar Changelog da Versão",
        "description": "Atualiza o changelog de uma versão",
        "operationId": "updateVersionChangelog",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID da Versão (formato: appv_...)",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^appv_[A-Z0-9]+$",
              "example": "appv_01J0RTQ9JYYWD90XZ1EW5QR82F"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateVersionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Changelog atualizado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VersionResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequestResponse"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedResponse"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundResponse"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/auth/professionals": {
      "post": {
        "summary": "Login Profissionais - Solicitar Código",
        "description": "Solicita código de verificação para login de profissionais",
        "operationId": "requestProfessionalCode",
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestCodeRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Código enviado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestCodeResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequestResponse"
          },
          "404": {
            "description": "CPF não encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/professionals/validate-code": {
      "post": {
        "summary": "Login Profissionais - Validar Código",
        "description": "Valida código de verificação e realiza login",
        "operationId": "validateProfessionalCode",
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateCodeRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login realizado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequestResponse"
          },
          "401": {
            "description": "Código inválido ou expirado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/users": {
      "post": {
        "summary": "Login de Usuários",
        "description": "Realiza login de usuários do dashboard ou etiquetadores",
        "operationId": "loginUser",
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/DashboardLoginRequest"
                  },
                  {
                    "$ref": "#/components/schemas/LabelerLoginRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login realizado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequestResponse"
          },
          "401": {
            "description": "Credenciais inválidas",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/users/check-password": {
      "post": {
        "summary": "Verificação de Senha",
        "description": "Verifica se a senha do usuário está correta",
        "operationId": "checkPassword",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CheckPasswordRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Senha válida",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckPasswordResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequestResponse"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedResponse"
          },
          "403": {
            "description": "Senha inválida",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/check-in": {
      "get": {
        "summary": "Listar Check-ins",
        "description": "Lista check-ins dos profissionais com filtros",
        "operationId": "listCheckIns",
        "parameters": [
          {
            "name": "professionalId",
            "in": "query",
            "description": "ID do profissional",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^prf_[A-Z0-9]+$",
              "example": "prf_01JPAKK1HX2S9N92HT3EPEFC0Z"
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Filtro por data (formato: YYYY-MM)",
            "schema": {
              "type": "string",
              "example": "2025-03"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de check-ins retornada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckInListResponse"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedResponse"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "/check-in": {
        "post": {
          "summary": "Registrar Check-in",
          "description": "Registra check-in do profissional em um PDV",
          "operationId": "createCheckIn",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateCheckInRequest"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Check-in registrado com sucesso",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CheckInResponse"
                  }
                }
              }
            },
            "400": {
              "$ref": "#/components/responses/BadRequestResponse"
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        }
      },
      "/configurations/remove-entities": {
        "get": {
          "summary": "Listar Entidades Bloqueadas",
          "description": "Lista entidades bloqueadas para remoção",
          "operationId": "listBlockedEntities",
          "parameters": [
            {
              "name": "search",
              "in": "query",
              "description": "Busca por ID da entidade",
              "schema": {
                "type": "string",
                "example": "appr_01J13WXDT3BGPXKAMBG641VYG0"
              }
            },
            {
              "name": "page",
              "in": "query",
              "description": "Número da página atual",
              "schema": {
                "type": "integer",
                "minimum": 1,
                "example": 1
              }
            },
            {
              "name": "size",
              "in": "query",
              "description": "Quantidade de itens por página",
              "schema": {
                "type": "integer",
                "minimum": 1,
                "default": 1,
                "example": 100
              }
            },
            {
              "name": "orderBy",
              "in": "query",
              "description": "Campo e direção da ordenação",
              "schema": {
                "type": "string",
                "enum": ["id-asc", "id-desc"],
                "example": "id-asc"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Lista de entidades bloqueadas retornada com sucesso",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BlockedEntitiesListResponse"
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        },
        "post": {
          "summary": "Bloquear Entidade",
          "description": "Bloqueia uma entidade para remoção",
          "operationId": "blockEntity",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BlockEntityRequest"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Entidade bloqueada com sucesso",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BlockedEntityResponse"
                  }
                }
              }
            },
            "400": {
              "$ref": "#/components/responses/BadRequestResponse"
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        }
      },
      "/configurations/remove-entities/{id}": {
        "delete": {
          "summary": "Desbloquear Entidade",
          "description": "Remove o bloqueio de uma entidade",
          "operationId": "unblockEntity",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "ID da entidade bloqueada (formato: ent_...)",
              "required": true,
              "schema": {
                "type": "string",
                "pattern": "^ent_[A-Z0-9]+$",
                "example": "ent_01J163TXPD54YR7C0RTSEB9PMD"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "Entidade desbloqueada com sucesso"
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            },
            "404": {
              "$ref": "#/components/responses/NotFoundResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        }
      },
      "/customer-profiles": {
        "get": {
          "summary": "Listar Perfis de Cliente",
          "description": "Lista perfis de clientes com suporte a busca e paginação",
          "operationId": "listCustomerProfiles",
          "parameters": [
            {
              "name": "search",
              "in": "query",
              "description": "Termo de busca em email, phone, twitter, facebook, instagram, whatsapp e about",
              "schema": {
                "type": "string",
                "example": "test"
              }
            },
            {
              "name": "page",
              "in": "query",
              "description": "Número da página atual",
              "schema": {
                "type": "integer",
                "minimum": 1,
                "example": 1
              }
            },
            {
              "name": "size",
              "in": "query",
              "description": "Quantidade de itens por página",
              "schema": {
                "type": "integer",
                "minimum": 1,
                "default": 1,
                "example": 20
              }
            },
            {
              "name": "orderBy",
              "in": "query",
              "description": "Campo e direção da ordenação",
              "schema": {
                "type": "string",
                "enum": ["createdAt-asc", "createdAt-desc"],
                "example": "createdAt-asc"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Lista de perfis retornada com sucesso",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CustomerProfileListResponse"
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        },
        "post": {
          "summary": "Criar Perfil de Cliente",
          "description": "Cria um novo perfil de cliente",
          "operationId": "createCustomerProfile",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateCustomerProfileRequest"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Perfil criado com sucesso",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CustomerProfileResponse"
                  }
                }
              }
            },
            "400": {
              "$ref": "#/components/responses/BadRequestResponse"
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        }
      },
      "/customer-profiles/{id}": {
        "get": {
          "summary": "Obter Perfil por ID",
          "description": "Obtém um perfil específico pelo seu ID",
          "operationId": "getCustomerProfileById",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "ID do Perfil (formato: prof_...)",
              "required": true,
              "schema": {
                "type": "string",
                "pattern": "^prof_[A-Z0-9]+$",
                "example": "prof_01J04CZXDVZAZ4821KG5FT8EY8"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Perfil retornado com sucesso",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CustomerProfileResponse"
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            },
            "404": {
              "$ref": "#/components/responses/NotFoundResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        },
        "put": {
          "summary": "Atualizar Perfil de Cliente",
          "description": "Atualiza um perfil de cliente existente",
          "operationId": "updateCustomerProfile",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "ID do Perfil (formato: prof_...)",
              "required": true,
              "schema": {
                "type": "string",
                "pattern": "^prof_[A-Z0-9]+$",
                "example": "prof_01J04CZXDVZAZ4821KG5FT8EY8"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateCustomerProfileRequest"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Perfil atualizado com sucesso",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CustomerProfileResponse"
                  }
                }
              }
            },
            "400": {
              "$ref": "#/components/responses/BadRequestResponse"
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            },
            "404": {
              "$ref": "#/components/responses/NotFoundResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        }
      },
      "/customers": {
        "get": {
          "summary": "Listar Clientes",
          "description": "Lista clientes com suporte a busca, filtros e paginação",
          "operationId": "listCustomers",
          "parameters": [
            {
              "name": "type",
              "in": "query",
              "description": "Tipo de cliente (marca, distribuidor ou híbrido)",
              "schema": {
                "type": "string",
                "enum": ["brand", "dealer", "hybrid"],
                "example": "brand"
              }
            },
            {
              "name": "fields",
              "in": "query",
              "description": "Campos a serem retornados (separados por hífen)",
              "schema": {
                "type": "string",
                "example": "id-companyName-type-contactName-contactEmail-status"
              }
            },
            {
              "name": "orderBy",
              "in": "query",
              "description": "Campo e direção da ordenação",
              "schema": {
                "type": "string",
                "example": "state-desc"
              }
            },
            {
              "name": "size",
              "in": "query",
              "description": "Quantidade de itens por página",
              "schema": {
                "type": "integer",
                "minimum": 1,
                "example": 1
              }
            },
            {
              "name": "page",
              "in": "query",
              "description": "Número da página atual",
              "schema": {
                "type": "integer",
                "minimum": 1,
                "example": 1
              }
            },
            {
              "name": "search",
              "in": "query",
              "description": "Termo de busca",
              "schema": {
                "type": "string",
                "example": "byefive"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Lista de clientes retornada com sucesso",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CustomerListResponse"
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        },
        "post": {
          "summary": "Criar Cliente",
          "description": "Cria um novo cliente (marca, distribuidor ou híbrido)",
          "operationId": "createCustomer",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateCustomerRequest"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Cliente criado com sucesso",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CustomerResponse"
                  }
                }
              }
            },
            "400": {
              "$ref": "#/components/responses/BadRequestResponse"
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        }
      },
      "/customers/all": {
        "get": {
          "summary": "Listar Todos Clientes Sem Restrições",
          "description": "Lista todos os clientes sem restrições com filtros",
          "operationId": "listAllCustomersUnrestricted",
          "parameters": [
            {
              "name": "linkedUser",
              "in": "query",
              "description": "ID do usuário vinculado",
              "schema": {
                "type": "string",
                "pattern": "^usr_[A-Z0-9]+$",
                "example": "usr_01J4J62RCMS5DTFYNTD2NCHZE0"
              }
            },
            {
              "name": "type",
              "in": "query",
              "description": "Tipo de cliente",
              "schema": {
                "type": "string",
                "enum": ["dealer", "brand", "hybrid"],
                "example": "dealer"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Lista de clientes retornada com sucesso",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CustomerListResponse"
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        }
      },
      "/customers/{id}": {
        "get": {
          "summary": "Obter Cliente por ID",
          "description": "Obtém um cliente específico pelo seu ID",
          "operationId": "getCustomerById",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "ID do Cliente (formato: cust_...)",
              "required": true,
              "schema": {
                "type": "string",
                "pattern": "^cust_[A-Z0-9]+$",
                "example": "cust_01J4J2ZGBCZZTN6EHR6T52FHS3"
              }
            },
            {
              "name": "fieldsRelation",
              "in": "query",
              "description": "Campos de relações a serem incluídos (separados por hífen)",
              "schema": {
                "type": "string",
                "example": "address-profiles-modules-subscriptions"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Cliente retornado com sucesso",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CustomerDetailResponse"
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            },
            "404": {
              "$ref": "#/components/responses/NotFoundResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        },
        "put": {
          "summary": "Atualizar Cliente",
          "description": "Atualiza um cliente existente",
          "operationId": "updateCustomer",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "ID do Cliente (formato: cust_...)",
              "required": true,
              "schema": {
                "type": "string",
                "pattern": "^cust_[A-Z0-9]+$",
                "example": "cust_01J1TSMZSMQAE9GX61HV7F6QRF"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateCustomerRequest"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Cliente atualizado com sucesso",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CustomerResponse"
                  }
                }
              }
            },
            "400": {
              "$ref": "#/components/responses/BadRequestResponse"
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            },
            "404": {
              "$ref": "#/components/responses/NotFoundResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        },
        "patch": {
          "summary": "Atualizar Status do Cliente",
          "description": "Atualiza o status de um cliente existente",
          "operationId": "updateCustomerStatus",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "ID do Cliente (formato: cust_...)",
              "required": true,
              "schema": {
                "type": "string",
                "pattern": "^cust_[A-Z0-9]+$",
                "example": "cust_01J4J2X7AWNQS2CXF1DDXM9VWV"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateCustomerStatusRequest"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Status do cliente atualizado com sucesso",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CustomerResponse"
                  }
                }
              }
            },
            "400": {
              "$ref": "#/components/responses/BadRequestResponse"
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            },
            "404": {
              "$ref": "#/components/responses/NotFoundResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        }
      },
      "/customers/count": {
        "get": {
          "summary": "Contar Distribuidores da Marca",
          "description": "Conta o total de distribuidores de uma marca",
          "operationId": "countDealers",
          "responses": {
            "200": {
              "description": "Contagem retornada com sucesso",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "total": {
                        "type": "integer",
                        "example": 42
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            },
            {
              "apiKeyAuth": []
            }
          ]
        }
      },
      "/customers/dealers/{id}": {
        "get": {
          "summary": "Listar IDs dos Distribuidores da Marca",
          "description": "Lista todos os IDs dos distribuidores vinculados a uma marca",
          "operationId": "listDealerIds",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "ID da Marca (formato: cust_...)",
              "required": true,
              "schema": {
                "type": "string",
                "pattern": "^cust_[A-Z0-9]+$",
                "example": "cust_01J4J2X7AWNQS2CXF1DDXM9VWV"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Lista de IDs retornada com sucesso",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "pattern": "^cust_[A-Z0-9]+$",
                      "example": "cust_01HWD6Q1BNHK8MFXT0XNQX0Z3V"
                    }
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            },
            "404": {
              "$ref": "#/components/responses/NotFoundResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            },
            {
              "apiKeyAuth": []
            }
          ]
        }
      },
      "/customers/brands/{id}": {
        "get": {
          "summary": "Listar Marcas do Distribuidor",
          "description": "Lista todas as marcas vinculadas a um distribuidor",
          "operationId": "listBrandsFromDealer",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "ID do Distribuidor (formato: cust_...)",
              "required": true,
              "schema": {
                "type": "string",
                "pattern": "^cust_[A-Z0-9]+$",
                "example": "cust_01J4J2ZGBCZZTN6EHR6T52FHS3"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Lista de marcas retornada com sucesso",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/CustomerBriefResponse"
                    }
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            },
            "404": {
              "$ref": "#/components/responses/NotFoundResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            },
            {
              "apiKeyAuth": []
            }
          ]
        }
      },
      "/customers/functionalities/{id}": {
        "get": {
          "summary": "Obter Flags de Funcionalidades do Cliente",
          "description": "Obtém as regras de flags de funcionalidades associadas a um cliente",
          "operationId": "getCustomerFlagsRules",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "ID do Cliente (formato: cust_...)",
              "required": true,
              "schema": {
                "type": "string",
                "pattern": "^cust_[A-Z0-9]+$",
                "example": "cust_01J4J2ZGBCZZTN6EHR6T52FHS3"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Lista de flags e regras retornada com sucesso",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/CustomerFlagsRuleResponse"
                    }
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            },
            "404": {
              "$ref": "#/components/responses/NotFoundResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            },
            {
              "apiKeyAuth": []
            }
          ]
        }
      },
      "/categories": {
        "get": {
          "summary": "Listar Categorias de Produtos",
          "description": "Lista categorias de produtos com suporte a busca e filtros",
          "operationId": "listProductCategories",
          "parameters": [
            {
              "name": "orderBy",
              "in": "query",
              "description": "Campo e direção da ordenação",
              "schema": {
                "type": "string",
                "example": "createdAt-asc"
              }
            },
            {
              "name": "fields",
              "in": "query",
              "description": "Campos a serem retornados (separados por hífen)",
              "schema": {
                "type": "string",
                "example": "id-name"
              }
            },
            {
              "name": "page",
              "in": "query",
              "description": "Número da página atual",
              "schema": {
                "type": "integer",
                "minimum": 1,
                "example": 1
              }
            },
            {
              "name": "search",
              "in": "query",
              "description": "Termo de busca",
              "schema": {
                "type": "string",
                "example": "shampoo"
              }
            },
            {
              "name": "size",
              "in": "query",
              "description": "Quantidade de itens por página",
              "schema": {
                "type": "integer",
                "minimum": 1,
                "example": 1
              }
            },
            {
              "name": "customer",
              "in": "query",
              "description": "ID do cliente",
              "schema": {
                "type": "string",
                "pattern": "^cust_[A-Z0-9]+$",
                "example": "cust_01J1B67QYN24Q8M9K8DTXMTSPE"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Lista de categorias retornada com sucesso",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProductCategoryListResponse"
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        },
        "post": {
          "summary": "Criar Categoria de Produto",
          "description": "Cria uma nova categoria de produto",
          "operationId": "createProductCategory",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateProductCategoryRequest"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Categoria criada com sucesso",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProductCategoryResponse"
                  }
                }
              }
            },
            "400": {
              "$ref": "#/components/responses/BadRequestResponse"
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        }
      },
      "/categories/{id}": {
        "get": {
          "summary": "Obter Categoria por ID",
          "description": "Obtém uma categoria de produto pelo seu ID",
          "operationId": "getProductCategoryById",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "ID da Categoria (formato: prc_...)",
              "required": true,
              "schema": {
                "type": "string",
                "pattern": "^prc_[A-Z0-9]+$",
                "example": "prc_01JNHFDTE8CSCC56QK8QBVEDRE"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Categoria retornada com sucesso",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProductCategoryResponse"
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            },
            "404": {
              "$ref": "#/components/responses/NotFoundResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        },
        "put": {
          "summary": "Atualizar Categoria",
          "description": "Atualiza uma categoria de produto existente",
          "operationId": "updateProductCategory",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "ID da Categoria (formato: prc_...)",
              "required": true,
              "schema": {
                "type": "string",
                "pattern": "^prc_[A-Z0-9]+$",
                "example": "prc_01J1BEVAST99C23JRFV3JVSN4S"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateProductCategoryRequest"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Categoria atualizada com sucesso",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProductCategoryResponse"
                  }
                }
              }
            },
            "400": {
              "$ref": "#/components/responses/BadRequestResponse"
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            },
            "404": {
              "$ref": "#/components/responses/NotFoundResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        },
        "delete": {
          "summary": "Remover Categoria",
          "description": "Remove uma categoria de produto",
          "operationId": "deleteProductCategory",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "ID da Categoria (formato: prc_...)",
              "required": true,
              "schema": {
                "type": "string",
                "pattern": "^prc_[A-Z0-9]+$",
                "example": "prc_01J1BEVAST99C23JRFV3JVSN4S"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "Categoria removida com sucesso"
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            },
            "404": {
              "$ref": "#/components/responses/NotFoundResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        }
      },
      "/category-groups": {
        "get": {
          "summary": "Listar Grupos de Categorias",
          "description": "Lista grupos de categorias de produtos",
          "operationId": "listCategoryGroups",
          "parameters": [
            {
              "name": "search",
              "in": "query",
              "description": "Termo de busca",
              "schema": {
                "type": "string",
                "example": "sell"
              }
            },
            {
              "name": "page",
              "in": "query",
              "description": "Número da página atual",
              "schema": {
                "type": "integer",
                "minimum": 1,
                "example": 1
              }
            },
            {
              "name": "orderBy",
              "in": "query",
              "description": "Campo e direção da ordenação",
              "schema": {
                "type": "string",
                "example": "createdAt-asc"
              }
            },
            {
              "name": "size",
              "in": "query",
              "description": "Quantidade de itens por página",
              "schema": {
                "type": "integer",
                "minimum": 1,
                "example": 1
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Lista de grupos retornada com sucesso",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CategoryGroupListResponse"
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        },
        "post": {
          "summary": "Criar Grupo de Categoria",
          "description": "Cria um novo grupo de categoria de produto",
          "operationId": "createCategoryGroup",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateCategoryGroupRequest"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Grupo de categoria criado com sucesso",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CategoryGroupResponse"
                  }
                }
              }
            },
            "400": {
              "$ref": "#/components/responses/BadRequestResponse"
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        }
      },
      "/category-groups/{id}": {
        "get": {
          "summary": "Obter Grupo de Categoria por ID",
          "description": "Obtém um grupo de categoria pelo seu ID",
          "operationId": "getCategoryGroupById",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "ID do Grupo de Categoria (formato: pcg_...)",
              "required": true,
              "schema": {
                "type": "string",
                "pattern": "^pcg_[A-Z0-9]+$",
                "example": "pcg_01J1BEJ7QG1WFMJPQZWND7C4YX"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Grupo de categoria retornado com sucesso",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CategoryGroupResponse"
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            },
            "404": {
              "$ref": "#/components/responses/NotFoundResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        },
        "put": {
          "summary": "Atualizar Grupo de Categoria",
          "description": "Atualiza um grupo de categoria existente",
          "operationId": "updateCategoryGroup",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "ID do Grupo de Categoria (formato: pcg_...)",
              "required": true,
              "schema": {
                "type": "string",
                "pattern": "^pcg_[A-Z0-9]+$",
                "example": "pcg_01J1BEJ7QG1WFMJPQZWND7C4YX"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateCategoryGroupRequest"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Grupo de categoria atualizado com sucesso",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CategoryGroupResponse"
                  }
                }
              }
            },
            "400": {
              "$ref": "#/components/responses/BadRequestResponse"
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            },
            "404": {
              "$ref": "#/components/responses/NotFoundResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        }
      },
      "/documents": {
        "get": {
          "summary": "Listar Documentos",
          "description": "Lista todos os documentos",
          "operationId": "listDocuments",
          "responses": {
            "200": {
              "description": "Lista de documentos retornada com sucesso",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/DocumentResponse"
                    }
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        },
        "post": {
          "summary": "Criar Documento",
          "description": "Cria um novo documento",
          "operationId": "createDocument",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateDocumentRequest"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Documento criado com sucesso",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/DocumentResponse"
                  }
                }
              }
            },
            "400": {
              "$ref": "#/components/responses/BadRequestResponse"
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        }
      },
      "/documents/{key}": {
        "get": {
          "summary": "Obter Documento por Chave",
          "description": "Obtém um documento específico pela sua chave",
          "operationId": "getDocumentByKey",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "description": "Chave do documento",
              "required": true,
              "schema": {
                "type": "string",
                "example": "termos-de-uso-etiquetadores"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Documento retornado com sucesso",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/DocumentResponse"
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            },
            "404": {
              "$ref": "#/components/responses/NotFoundResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        },
        "put": {
          "summary": "Atualizar Documento",
          "description": "Atualiza um documento existente",
          "operationId": "updateDocument",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "description": "Chave do documento",
              "required": true,
              "schema": {
                "type": "string",
                "example": "termos-de-uso-etiquetadores"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateDocumentRequest"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Documento atualizado com sucesso",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/DocumentResponse"
                  }
                }
              }
            },
            "400": {
              "$ref": "#/components/responses/BadRequestResponse"
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            },
            "404": {
              "$ref": "#/components/responses/NotFoundResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        },
        "delete": {
          "summary": "Remover Documento",
          "description": "Remove um documento pela sua chave",
          "operationId": "deleteDocument",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "description": "Chave do documento",
              "required": true,
              "schema": {
                "type": "string",
                "example": "documento-teste"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "Documento removido com sucesso"
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            },
            "404": {
              "$ref": "#/components/responses/NotFoundResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        }
      },
      "/flags": {
        "get": {
          "summary": "Listar Flags",
          "description": "Lista todas as feature flags com filtros",
          "operationId": "listFlags",
          "parameters": [
            {
              "name": "search",
              "in": "query",
              "description": "Termo de busca",
              "schema": {
                "type": "string",
                "example": "check"
              }
            },
            {
              "name": "fields",
              "in": "query",
              "description": "Campos a serem retornados (separados por hífen)",
              "schema": {
                "type": "string",
                "example": "name-rule"
              }
            },
            {
              "name": "orderBy",
              "in": "query",
              "description": "Campo e direção da ordenação",
              "schema": {
                "type": "string",
                "example": "rule-asc"
              }
            },
            {
              "name": "page",
              "in": "query",
              "description": "Número da página atual",
              "schema": {
                "type": "integer",
                "minimum": 1,
                "example": 2
              }
            },
            {
              "name": "size",
              "in": "query",
              "description": "Quantidade de itens por página",
              "schema": {
                "type": "integer",
                "minimum": 1,
                "example": 1
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Lista de flags retornada com sucesso",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/FlagListResponse"
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        },
        "post": {
          "summary": "Criar Flag",
          "description": "Cria uma nova feature flag",
          "operationId": "createFlag",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateFlagRequest"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Flag criada com sucesso",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/FlagResponse"
                  }
                }
              }
            },
            "400": {
              "$ref": "#/components/responses/BadRequestResponse"
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            },
            {
              "apiKeyAuth": []
            }
          ]
        }
      },
      "/flags/{rule}": {
        "get": {
          "summary": "Obter Flag por Regra",
          "description": "Obtém uma feature flag pela sua regra",
          "operationId": "getFlagByRule",
          "parameters": [
            {
              "name": "rule",
              "in": "path",
              "description": "Regra da flag",
              "required": true,
              "schema": {
                "type": "string",
                "example": "modulesByefivePay"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Flag retornada com sucesso",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/FlagResponse"
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            },
            "404": {
              "$ref": "#/components/responses/NotFoundResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        }
      },
      "/flags/{id}": {
        "put": {
          "summary": "Atualizar Flag",
          "description": "Atualiza uma feature flag existente",
          "operationId": "updateFlag",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "ID da Flag (formato: flg_...)",
              "required": true,
              "schema": {
                "type": "string",
                "pattern": "^flg_[A-Z0-9]+$",
                "example": "flg_01J03Q0NMWD1A848NBW464045G"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateFlagRequest"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Flag atualizada com sucesso",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/FlagResponse"
                  }
                }
              }
            },
            "400": {
              "$ref": "#/components/responses/BadRequestResponse"
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            },
            "404": {
              "$ref": "#/components/responses/NotFoundResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        },
        "delete": {
          "summary": "Remover Flag",
          "description": "Remove uma feature flag",
          "operationId": "deleteFlag",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "ID da Flag (formato: flg_...)",
              "required": true,
              "schema": {
                "type": "string",
                "pattern": "^flg_[A-Z0-9]+$",
                "example": "flg_01HY6N8X8KY4C3W4XX65AWC34M"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "Flag removida com sucesso"
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            },
            "404": {
              "$ref": "#/components/responses/NotFoundResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        }
      },
      "/functionalities": {
        "get": {
          "summary": "Listar Funcionalidades",
          "description": "Lista todas as funcionalidades/módulos com filtros",
          "operationId": "listFunctionalities",
          "parameters": [
            {
              "name": "module",
              "in": "query",
              "description": "Filtrar apenas módulos",
              "schema": {
                "type": "boolean",
                "example": true
              }
            },
            {
              "name": "size",
              "in": "query",
              "description": "Quantidade de itens por página",
              "schema": {
                "type": "integer",
                "minimum": 1,
                "example": 1
              }
            },
            {
              "name": "status",
              "in": "query",
              "description": "Filtrar por status",
              "schema": {
                "type": "string",
                "enum": ["active", "inactive", "notInUse"],
                "example": "notInUse"
              }
            },
            {
              "name": "search",
              "in": "query",
              "description": "Termo de busca",
              "schema": {
                "type": "string",
                "example": "produtos"
              }
            },
            {
              "name": "fields",
              "in": "query",
              "description": "Campos a serem retornados (separados por hífen)",
              "schema": {
                "type": "string",
                "example": "name-module-monthlyPayment-status"
              }
            },
            {
              "name": "orderBy",
              "in": "query",
              "description": "Campo e direção da ordenação",
              "schema": {
                "type": "string",
                "example": "name-desc"
              }
            },
            {
              "name": "page",
              "in": "query",
              "description": "Número da página atual",
              "schema": {
                "type": "integer",
                "minimum": 1,
                "example": 2
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Lista de funcionalidades retornada com sucesso",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/FunctionalityListResponse"
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        },
        "post": {
          "summary": "Criar Funcionalidade",
          "description": "Cria uma nova funcionalidade ou módulo",
          "operationId": "createFunctionality",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateFunctionalityRequest"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Funcionalidade criada com sucesso",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/FunctionalityResponse"
                  }
                }
              }
            },
            "400": {
              "$ref": "#/components/responses/BadRequestResponse"
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        }
      },
      "/functionalities/{id}": {
        "get": {
          "summary": "Obter Funcionalidade por ID",
          "description": "Obtém uma funcionalidade específica pelo seu ID",
          "operationId": "getFunctionalityById",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "ID da Funcionalidade (formato: fnc_...)",
              "required": true,
              "schema": {
                "type": "string",
                "pattern": "^fnc_[A-Z0-9]+$",
                "example": "fnc_01HV2GXB6NH738XKZ73GJQGN40"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Funcionalidade retornada com sucesso",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/FunctionalityResponse"
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            },
            "404": {
              "$ref": "#/components/responses/NotFoundResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        },
        "put": {
          "summary": "Atualizar Funcionalidade",
          "description": "Atualiza uma funcionalidade existente",
          "operationId": "updateFunctionality",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "ID da Funcionalidade (formato: fnc_...)",
              "required": true,
              "schema": {
                "type": "string",
                "pattern": "^fnc_[A-Z0-9]+$",
                "example": "fnc_01HV2GXB6NH738XKZ73GJQGN40"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateFunctionalityRequest"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Funcionalidade atualizada com sucesso",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/FunctionalityResponse"
                  }
                }
              }
            },
            "400": {
              "$ref": "#/components/responses/BadRequestResponse"
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            },
            "404": {
              "$ref": "#/components/responses/NotFoundResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        }
      },
      "/functionalities/{id}/flags": {
        "get": {
          "summary": "Obter Flags da Funcionalidade",
          "description": "Obtém as flags associadas a uma funcionalidade",
          "operationId": "getFunctionalityFlags",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "ID da Funcionalidade (formato: fnc_...)",
              "required": true,
              "schema": {
                "type": "string",
                "pattern": "^fnc_[A-Z0-9]+$",
                "example": "fnc_01HV2GXB6NH738XKZ73GJQGN40"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Lista de flags retornada com sucesso",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/FlagResponse"
                    }
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            },
            "404": {
              "$ref": "#/components/responses/NotFoundResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            },
            {
              "apiKeyAuth": []
            }
          ]
        }
      },
      "/invites": {
        "get": {
          "summary": "Listar Convites",
          "description": "Lista todos os convites enviados",
          "operationId": "listInvites",
          "parameters": [
            {
              "name": "search",
              "in": "query",
              "description": "Termo de busca",
              "schema": {
                "type": "string",
                "example": "doe"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Lista de convites retornada com sucesso",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/InviteResponse"
                    }
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        },
        "post": {
          "summary": "Enviar Novo Convite",
          "description": "Envia um novo convite para um profissional",
          "operationId": "sendInvite",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SendInviteRequest"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Convite enviado com sucesso",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/InviteResponse"
                  }
                }
              }
            },
            "400": {
              "$ref": "#/components/responses/BadRequestResponse"
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        }
      },
      "/invites/count": {
        "get": {
          "summary": "Contar Convites Pendentes",
          "description": "Conta o número de convites pendentes",
          "operationId": "countPendingInvites",
          "responses": {
            "200": {
              "description": "Contagem retornada com sucesso",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "total": {
                        "type": "integer",
                        "example": 5
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        }
      },
      "/invites/{id}": {
        "get": {
          "summary": "Obter Convite por ID",
          "description": "Obtém um convite específico pelo seu ID",
          "operationId": "getInviteById",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "ID do Convite (formato: inv_...)",
              "required": true,
              "schema": {
                "type": "string",
                "pattern": "^inv_[A-Z0-9]+$",
                "example": "inv_01JK9QSPB43JQ4B5JTZDYTG7E4"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Convite retornado com sucesso",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/InviteResponse"
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            },
            "404": {
              "$ref": "#/components/responses/NotFoundResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        },
        "put": {
          "summary": "Reenviar Convite",
          "description": "Reenvia um convite existente",
          "operationId": "resendInvite",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "ID do Convite (formato: inv_...)",
              "required": true,
              "schema": {
                "type": "string",
                "pattern": "^inv_[A-Z0-9]+$",
                "example": "inv_01JK9QSPB43JQ4B5JTZDYTG7E4"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResendInviteRequest"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Convite reenviado com sucesso",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/InviteResponse"
                  }
                }
              }
            },
            "400": {
              "$ref": "#/components/responses/BadRequestResponse"
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            },
            "404": {
              "$ref": "#/components/responses/NotFoundResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        },
        "delete": {
          "summary": "Excluir Convite",
          "description": "Exclui um convite existente",
          "operationId": "deleteInvite",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "ID do Convite (formato: inv_...)",
              "required": true,
              "schema": {
                "type": "string",
                "pattern": "^inv_[A-Z0-9]+$",
                "example": "inv_01JK9QYMYN97VVST6R727XARZ2"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "Convite excluído com sucesso"
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            },
            "404": {
              "$ref": "#/components/responses/NotFoundResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        }
      },
      "/invites/resend-all": {
        "put": {
          "summary": "Reenviar Todos os Convites",
          "description": "Reenvia todos os convites pendentes",
          "operationId": "resendAllInvites",
          "responses": {
            "200": {
              "description": "Convites reenviados com sucesso",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "example": "Todos os convites foram reenviados com sucesso"
                      },
                      "count": {
                        "type": "integer",
                        "example": 5
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        }
      },
      "/kv": {
        "post": {
          "summary": "Criar Item no KV Database",
          "description": "Cria um novo item no banco de dados chave-valor",
          "operationId": "createKvItem",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateKvItemRequest"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Item criado com sucesso",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/KvItemResponse"
                  }
                }
              }
            },
            "400": {
              "$ref": "#/components/responses/BadRequestResponse"
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        }
      },
      "/kv/{id}": {
        "get": {
          "summary": "Obter Item do KV Database por ID",
          "description": "Obtém um item do banco de dados chave-valor pelo ID",
          "operationId": "getKvItemById",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "ID do item",
              "required": true,
              "schema": {
                "type": "string",
                "example": "9824303294098"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Item retornado com sucesso",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/KvItemResponse"
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            },
            "404": {
              "$ref": "#/components/responses/NotFoundResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        },
        "delete": {
          "summary": "Remover Item do KV Database",
          "description": "Remove um item do banco de dados chave-valor",
          "operationId": "deleteKvItem",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "ID do item",
              "required": true,
              "schema": {
                "type": "string",
                "example": "9824303294098"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "Item removido com sucesso"
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            },
            "404": {
              "$ref": "#/components/responses/NotFoundResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        }
      },
      "/kv-temp": {
        "post": {
          "summary": "Criar Valor Temporário",
          "description": "Cria um novo valor temporário no banco de dados chave-valor",
          "operationId": "createKvTemp",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateKvTempRequest"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Valor temporário criado com sucesso",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/KvTempResponse"
                  }
                }
              }
            },
            "400": {
              "$ref": "#/components/responses/BadRequestResponse"
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        }
      },
      "/kv-temp/{id}": {
        "get": {
          "summary": "Obter Valor Temporário",
          "description": "Obtém um valor temporário do banco de dados chave-valor",
          "operationId": "getKvTempById",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "ID do valor temporário",
              "required": true,
              "schema": {
                "type": "string",
                "example": "34982039482039483"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Valor temporário retornado com sucesso",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/KvTempResponse"
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            },
            "404": {
              "$ref": "#/components/responses/NotFoundResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        }
      },
      "/notes": {
        "post": {
          "summary": "Criar Nota",
          "description": "Cria uma nova nota",
          "operationId": "createNote",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateNoteRequest"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Nota criada com sucesso",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NoteResponse"
                  }
                }
              }
            },
            "400": {
              "$ref": "#/components/responses/BadRequestResponse"
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        }
      },
      "/notes/{id}": {
        "get": {
          "summary": "Obter Nota por ID",
          "description": "Obtém uma nota específica pelo ID do proprietário",
          "operationId": "getNoteById",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "ID do proprietário da nota (formato: prf_...)",
              "required": true,
              "schema": {
                "type": "string",
                "pattern": "^prf_[A-Z0-9]+$",
                "example": "prf_01JJQ9CKNSPGJZNSYDPGJ97KBS"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Nota retornada com sucesso",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NoteResponse"
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            },
            "404": {
              "$ref": "#/components/responses/NotFoundResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        },
        "put": {
          "summary": "Atualizar Nota",
          "description": "Atualiza uma nota existente",
          "operationId": "updateNote",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "ID do proprietário da nota (formato: prf_...)",
              "required": true,
              "schema": {
                "type": "string",
                "pattern": "^prf_[A-Z0-9]+$",
                "example": "prf_01JJQ9CKNSPGJZNSYDPGJ97KBS"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateNoteRequest"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Nota atualizada com sucesso",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NoteResponse"
                  }
                }
              }
            },
            "400": {
              "$ref": "#/components/responses/BadRequestResponse"
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            },
            "404": {
              "$ref": "#/components/responses/NotFoundResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        }
      },
      "/pdv-networks": {
        "get": {
          "summary": "Listar Redes de PDVs",
          "description": "Lista todas as redes de PDVs com filtros",
          "operationId": "listPdvNetworks",
          "parameters": [
            {
              "name": "search",
              "in": "query",
              "description": "Termo de busca",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "page",
              "in": "query",
              "description": "Número da página atual",
              "schema": {
                "type": "integer",
                "minimum": 1,
                "example": 1
              }
            },
            {
              "name": "size",
              "in": "query",
              "description": "Quantidade de itens por página",
              "schema": {
                "type": "integer",
                "minimum": 1,
                "example": 10
              }
            },
            {
              "name": "orderBy",
              "in": "query",
              "description": "Campo e direção da ordenação",
              "schema": {
                "type": "string",
                "example": "name-asc"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Lista de redes de PDVs retornada com sucesso",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PdvNetworkListResponse"
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        },
        "post": {
          "summary": "Criar Rede de PDV",
          "description": "Cria uma nova rede de PDV",
          "operationId": "createPdvNetwork",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatePdvNetworkRequest"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Rede de PDV criada com sucesso",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PdvNetworkResponse"
                  }
                }
              }
            },
            "400": {
              "$ref": "#/components/responses/BadRequestResponse"
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        }
      },
      "/pdv-networks/{id}": {
        "get": {
          "summary": "Obter Rede de PDV por ID",
          "description": "Obtém uma rede de PDV específica pelo seu ID",
          "operationId": "getPdvNetworkById",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "ID da Rede de PDV (formato: pnt_...)",
              "required": true,
              "schema": {
                "type": "string",
                "pattern": "^pnt_[A-Z0-9]+$",
                "example": "pnt_01HWD6QTYEVTC3K6CB6GTP52J0"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Rede de PDV retornada com sucesso",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PdvNetworkResponse"
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            },
            "404": {
              "$ref": "#/components/responses/NotFoundResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        },
        "put": {
          "summary": "Atualizar Rede de PDV",
          "description": "Atualiza uma rede de PDV existente",
          "operationId": "updatePdvNetwork",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "ID da Rede de PDV (formato: pnt_...)",
              "required": true,
              "schema": {
                "type": "string",
                "pattern": "^pnt_[A-Z0-9]+$",
                "example": "pnt_01J1BRD26SQD3QD9Z3HRANV0H5"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdatePdvNetworkRequest"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Rede de PDV atualizada com sucesso",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PdvNetworkResponse"
                  }
                }
              }
            },
            "400": {
              "$ref": "#/components/responses/BadRequestResponse"
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            },
            "404": {
              "$ref": "#/components/responses/NotFoundResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        },
        "delete": {
          "summary": "Remover Rede de PDV",
          "description": "Remove uma rede de PDV",
          "operationId": "deletePdvNetwork",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "ID da Rede de PDV (formato: pnt_...)",
              "required": true,
              "schema": {
                "type": "string",
                "pattern": "^pnt_[A-Z0-9]+$",
                "example": "pnt_01J1BRD26SQD3QD9Z3HRANV0H5"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "Rede de PDV removida com sucesso"
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            },
            "404": {
              "$ref": "#/components/responses/NotFoundResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        }
      },
      "/pdvs": {
        "get": {
          "summary": "Listar PDVs",
          "description": "Lista todos os PDVs com suporte a filtros e paginação",
          "operationId": "listPdvs",
          "parameters": [
            {
              "name": "fieldsRelation",
              "in": "query",
              "description": "Campos de relações a serem incluídos (separados por hífen)",
              "schema": {
                "type": "string",
                "example": "address-customer"
              }
            },
            {
              "name": "search",
              "in": "query",
              "description": "Termo de busca",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "page",
              "in": "query",
              "description": "Número da página atual",
              "schema": {
                "type": "integer",
                "minimum": 1,
                "example": 1
              }
            },
            {
              "name": "size",
              "in": "query",
              "description": "Quantidade de itens por página",
              "schema": {
                "type": "integer",
                "minimum": 1,
                "example": 10
              }
            },
            {
              "name": "orderBy",
              "in": "query",
              "description": "Campo e direção da ordenação",
              "schema": {
                "type": "string",
                "example": "name-asc"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Lista de PDVs retornada com sucesso",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PdvListResponse"
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        },
        "post": {
          "summary": "Criar PDV",
          "description": "Cria um novo PDV",
          "operationId": "createPdv",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatePdvRequest"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "PDV criado com sucesso",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PdvResponse"
                  }
                }
              }
            },
            "400": {
              "$ref": "#/components/responses/BadRequestResponse"
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        }
      },
      "/pdvs/mobile": {
        "post": {
          "summary": "Listar PDVs para Aplicativo Móvel",
          "description": "Lista PDVs com filtros específicos para aplicativo móvel",
          "operationId": "listPdvsForMobile",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PdvMobileQueryRequest"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Lista de PDVs retornada com sucesso",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PdvListResponse"
                  }
                }
              }
            },
            "400": {
              "$ref": "#/components/responses/BadRequestResponse"
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        }
      },
      "/pdvs/all": {
        "get": {
          "summary": "Listar Todos PDVs Sem Restrição",
          "description": "Lista todos os PDVs sem restrições de permissão",
          "operationId": "listAllPdvsUnrestricted",
          "parameters": [
            {
              "name": "customerId",
              "in": "query",
              "description": "ID do cliente",
              "schema": {
                "type": "string",
                "pattern": "^cust_[A-Z0-9]+$"
              }
            },
            {
              "name": "search",
              "in": "query",
              "description": "Termo de busca",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Lista de PDVs retornada com sucesso",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PdvListResponse"
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        }
      },
      "/pdvs/{id}": {
        "get": {
          "summary": "Obter PDV por ID",
          "description": "Obtém um PDV específico pelo seu ID",
          "operationId": "getPdvById",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "ID do PDV (formato: pdv_...)",
              "required": true,
              "schema": {
                "type": "string",
                "pattern": "^pdv_[A-Z0-9]+$",
                "example": "pdv_01J6T5MA227QN594Z5D7SKCWBE"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "PDV retornado com sucesso",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PdvDetailResponse"
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            },
            "404": {
              "$ref": "#/components/responses/NotFoundResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        },
        "put": {
          "summary": "Atualizar PDV",
          "description": "Atualiza um PDV existente",
          "operationId": "updatePdv",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "ID do PDV (formato: pdv_...)",
              "required": true,
              "schema": {
                "type": "string",
                "pattern": "^pdv_[A-Z0-9]+$",
                "example": "pdv_01J4M4D0Q8XHCGZF0ZDVXA6PJF"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdatePdvRequest"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "PDV atualizado com sucesso",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PdvResponse"
                  }
                }
              }
            },
            "400": {
              "$ref": "#/components/responses/BadRequestResponse"
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            },
            "404": {
              "$ref": "#/components/responses/NotFoundResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        },
        "delete": {
          "summary": "Remover PDV",
          "description": "Remove um PDV",
          "operationId": "deletePdv",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "ID do PDV (formato: pdv_...)",
              "required": true,
              "schema": {
                "type": "string",
                "pattern": "^pdv_[A-Z0-9]+$",
                "example": "pdv_01J1ABG62R5T0Q74WESC9FGVR6"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "PDV removido com sucesso"
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            },
            "404": {
              "$ref": "#/components/responses/NotFoundResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        }
      },
      "/pdvs/requested": {
        "get": {
          "summary": "Listar PDVs Solicitados",
          "description": "Lista todos os PDVs solicitados por profissionais",
          "operationId": "listRequestedPdvs",
          "parameters": [
            {
              "name": "search",
              "in": "query",
              "description": "Termo de busca",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "page",
              "in": "query",
              "description": "Número da página atual",
              "schema": {
                "type": "integer",
                "minimum": 1,
                "example": 1
              }
            },
            {
              "name": "size",
              "in": "query",
              "description": "Quantidade de itens por página",
              "schema": {
                "type": "integer",
                "minimum": 1,
                "example": 10
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Lista de PDVs solicitados retornada com sucesso",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/RequestedPdvListResponse"
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        }
      },
      "/pdvs/requested/{id}": {
        "get": {
          "summary": "Obter PDV Solicitado por ID",
          "description": "Obtém um PDV solicitado específico pelo seu ID",
          "operationId": "getRequestedPdvById",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "ID do PDV Solicitado (formato: prdv_...)",
              "required": true,
              "schema": {
                "type": "string",
                "pattern": "^prdv_[A-Z0-9]+$",
                "example": "prdv_01JJQ9CKP09HEVYP0HY34QWC2F"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "PDV solicitado retornado com sucesso",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/RequestedPdvResponse"
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            },
            "404": {
              "$ref": "#/components/responses/NotFoundResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        }
      },
      "/pdvs/count": {
        "get": {
          "summary": "Contar PDVs",
          "description": "Conta o número total de PDVs com filtros opcionais",
          "operationId": "countPdvs",
          "parameters": [
            {
              "name": "forceListAll",
              "in": "query",
              "description": "Forçar contagem de todos os PDVs",
              "schema": {
                "type": "boolean",
                "example": true
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Contagem retornada com sucesso",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "total": {
                        "type": "integer",
                        "example": 152
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        }
      },
      "/pdvs/requested-exists/{id}": {
        "get": {
          "summary": "Verificar Existência de PDV Solicitado",
          "description": "Verifica se existe um PDV solicitado por CEP e nome",
          "operationId": "checkRequestedPdvExistence",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "ID do PDV Solicitado (formato: prdv_...)",
              "required": true,
              "schema": {
                "type": "string",
                "pattern": "^prdv_[A-Z0-9]+$",
                "example": "prdv_01JJQ9CKP09HEVYP0HY34QWC2F"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Resultado da verificação retornado com sucesso",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "exists": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        }
      },
      "/products": {
        "get": {
          "summary": "Listar Produtos",
          "description": "Lista produtos com suporte a filtros e paginação",
          "operationId": "listProducts",
          "parameters": [
            {
              "name": "search",
              "in": "query",
              "description": "Termo de busca",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "categoryId",
              "in": "query",
              "description": "ID da categoria",
              "schema": {
                "type": "string",
                "pattern": "^prc_[A-Z0-9]+$"
              }
            },
            {
              "name": "lineId",
              "in": "query",
              "description": "ID da linha de produto",
              "schema": {
                "type": "string",
                "pattern": "^lin_[A-Z0-9]+$"
              }
            },
            {
              "name": "status",
              "in": "query",
              "description": "Status do produto",
              "schema": {
                "type": "string",
                "enum": ["active", "inactive"]
              }
            },
            {
              "name": "page",
              "in": "query",
              "description": "Número da página atual",
              "schema": {
                "type": "integer",
                "minimum": 1,
                "example": 1
              }
            },
            {
              "name": "size",
              "in": "query",
              "description": "Quantidade de itens por página",
              "schema": {
                "type": "integer",
                "minimum": 1,
                "example": 10
              }
            },
            {
              "name": "orderBy",
              "in": "query",
              "description": "Campo e direção da ordenação",
              "schema": {
                "type": "string",
                "example": "name-asc"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Lista de produtos retornada com sucesso",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProductListResponse"
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        },
        "post": {
          "summary": "Criar Produto",
          "description": "Cria um novo produto",
          "operationId": "createProduct",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateProductRequest"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Produto criado com sucesso",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProductResponse"
                  }
                }
              }
            },
            "400": {
              "$ref": "#/components/responses/BadRequestResponse"
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        }
      },
      "/products/{id}": {
        "get": {
          "summary": "Obter Produto por ID",
          "description": "Obtém um produto específico pelo seu ID",
          "operationId": "getProductById",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "ID do Produto (formato: prd_...)",
              "required": true,
              "schema": {
                "type": "string",
                "pattern": "^prd_[A-Z0-9]+$",
                "example": "prd_01JP4VY5F8W9CDJM81M04ZHXKM"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Produto retornado com sucesso",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProductDetailResponse"
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            },
            "404": {
              "$ref": "#/components/responses/NotFoundResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        },
        "put": {
          "summary": "Atualizar Produto",
          "description": "Atualiza um produto existente",
          "operationId": "updateProduct",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "ID do Produto (formato: prd_...)",
              "required": true,
              "schema": {
                "type": "string",
                "pattern": "^prd_[A-Z0-9]+$",
                "example": "prd_01J800TNERKCVMNWDCNAEJ5TTS"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateProductRequest"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Produto atualizado com sucesso",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProductResponse"
                  }
                }
              }
            },
            "400": {
              "$ref": "#/components/responses/BadRequestResponse"
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            },
            "404": {
              "$ref": "#/components/responses/NotFoundResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        },
        "delete": {
          "summary": "Remover Produto",
          "description": "Remove um produto",
          "operationId": "deleteProduct",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "ID do Produto (formato: prd_...)",
              "required": true,
              "schema": {
                "type": "string",
                "pattern": "^prd_[A-Z0-9]+$",
                "example": "prd_01J3RYP73FDMY9EECB6MF9C8SC"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "Produto removido com sucesso"
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            },
            "404": {
              "$ref": "#/components/responses/NotFoundResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        }
      },
      "/products/barcode/{barcode}": {
        "get": {
          "summary": "Obter Produto por Código de Barras",
          "description": "Obtém um produto específico pelo seu código de barras",
          "operationId": "getProductByBarcode",
          "parameters": [
            {
              "name": "barcode",
              "in": "path",
              "description": "Código de barras do produto",
              "required": true,
              "schema": {
                "type": "string",
                "example": "9351064272782"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Produto retornado com sucesso",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProductDetailResponse"
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            },
            "404": {
              "$ref": "#/components/responses/NotFoundResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        }
      },
      "/products/status-price": {
        "patch": {
          "summary": "Atualizar Status e Pontos dos Produtos",
          "description": "Atualiza o status e/ou pontuação de vários produtos em lote",
          "operationId": "updateProductsStatusAndPoints",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateProductsStatusPointsRequest"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Produtos atualizados com sucesso",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "updated": {
                        "type": "integer",
                        "example": 5
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "$ref": "#/components/responses/BadRequestResponse"
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        }
      },
      "/products-lines": {
        "get": {
          "summary": "Listar Linhas de Produtos",
          "description": "Lista linhas de produtos com suporte a filtros e paginação",
          "operationId": "listProductLines",
          "parameters": [
            {
              "name": "search",
              "in": "query",
              "description": "Termo de busca",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "customer",
              "in": "query",
              "description": "ID do cliente",
              "schema": {
                "type": "string",
                "pattern": "^cust_[A-Z0-9]+$"
              }
            },
            {
              "name": "page",
              "in": "query",
              "description": "Número da página atual",
              "schema": {
                "type": "integer",
                "minimum": 1,
                "example": 1
              }
            },
            {
              "name": "size",
              "in": "query",
              "description": "Quantidade de itens por página",
              "schema": {
                "type": "integer",
                "minimum": 1,
                "example": 10
              }
            },
            {
              "name": "orderBy",
              "in": "query",
              "description": "Campo e direção da ordenação",
              "schema": {
                "type": "string",
                "example": "name-asc"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Lista de linhas de produtos retornada com sucesso",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProductLineListResponse"
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        },
        "post": {
          "summary": "Criar Linha de Produto",
          "description": "Cria uma nova linha de produto",
          "operationId": "createProductLine",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateProductLineRequest"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Linha de produto criada com sucesso",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProductLineResponse"
                  }
                }
              }
            },
            "400": {
              "$ref": "#/components/responses/BadRequestResponse"
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        }
      },
      "/products-lines/{id}": {
        "get": {
          "summary": "Obter Linha de Produto por ID",
          "description": "Obtém uma linha de produto específica pelo seu ID",
          "operationId": "getProductLineById",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "ID da Linha de Produto (formato: lin_...)",
              "required": true,
              "schema": {
                "type": "string",
                "pattern": "^lin_[A-Z0-9]+$",
                "example": "lin_01JNHFGX6BGW5S4TKW4G0DKWM4"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Linha de produto retornada com sucesso",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProductLineResponse"
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            },
            "404": {
              "$ref": "#/components/responses/NotFoundResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        },
        "put": {
          "summary": "Atualizar Linha de Produto",
          "description": "Atualiza uma linha de produto existente",
          "operationId": "updateProductLine",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "ID da Linha de Produto (formato: lin_...)",
              "required": true,
              "schema": {
                "type": "string",
                "pattern": "^lin_[A-Z0-9]+$",
                "example": "lin_01J19251Y22Y02KSHPA490J8ZV"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateProductLineRequest"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Linha de produto atualizada com sucesso",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProductLineResponse"
                  }
                }
              }
            },
            "400": {
              "$ref": "#/components/responses/BadRequestResponse"
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            },
            "404": {
              "$ref": "#/components/responses/NotFoundResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        },
        "delete": {
          "summary": "Remover Linha de Produto",
          "description": "Remove uma linha de produto",
          "operationId": "deleteProductLine",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "ID da Linha de Produto (formato: lin_...)",
              "required": true,
              "schema": {
                "type": "string",
                "pattern": "^lin_[A-Z0-9]+$",
                "example": "lin_01J19251Y22Y02KSHPA490J8ZV"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "Linha de produto removida com sucesso"
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            },
            "404": {
              "$ref": "#/components/responses/NotFoundResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        }
      },
      "/professionals": {
        "get": {
          "summary": "Listar Profissionais",
          "description": "Lista profissionais com suporte a filtros e paginação",
          "operationId": "listProfessionals",
          "parameters": [
            {
              "name": "search",
              "in": "query",
              "description": "Termo de busca",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "page",
              "in": "query",
              "description": "Número da página atual",
              "schema": {
                "type": "integer",
                "minimum": 1,
                "example": 1
              }
            },
            {
              "name": "size",
              "in": "query",
              "description": "Quantidade de itens por página",
              "schema": {
                "type": "integer",
                "minimum": 1,
                "example": 10
              }
            },
            {
              "name": "orderBy",
              "in": "query",
              "description": "Campo e direção da ordenação",
              "schema": {
                "type": "string",
                "example": "name-asc"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Lista de profissionais retornada com sucesso",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProfessionalListResponse"
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        },
        "post": {
          "summary": "Criar Profissional",
          "description": "Cria um novo profissional",
          "operationId": "createProfessional",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateProfessionalRequest"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Profissional criado com sucesso",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProfessionalResponse"
                  }
                }
              }
            },
            "400": {
              "$ref": "#/components/responses/BadRequestResponse"
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        }
      },
      "/professionals/connections": {
        "get": {
          "summary": "Listar Alertas de Conexões",
          "description": "Lista alertas de conexões de clientes com profissionais",
          "operationId": "listConnectionAlerts",
          "responses": {
            "200": {
              "description": "Lista de alertas retornada com sucesso",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/ConnectionAlertResponse"
                    }
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        }
      },
      "/professionals/{id}": {
        "get": {
          "summary": "Obter Profissional por ID",
          "description": "Obtém um profissional específico pelo seu ID",
          "operationId": "getProfessionalById",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "ID do Profissional (formato: prf_...)",
              "required": true,
              "schema": {
                "type": "string",
                "pattern": "^prf_[A-Z0-9]+$",
                "example": "prf_01JJZRMFRY03PN3KVHHNJW8XZ7"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Profissional retornado com sucesso",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProfessionalDetailResponse"
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            },
            "404": {
              "$ref": "#/components/responses/NotFoundResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        },
        "put": {
          "summary": "Atualizar Profissional",
          "description": "Atualiza um profissional existente",
          "operationId": "updateProfessional",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "ID do Profissional (formato: prf_...)",
              "required": true,
              "schema": {
                "type": "string",
                "pattern": "^prf_[A-Z0-9]+$",
                "example": "prf_01JN9P2RS0H61S94FYXWEZHEQB"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateProfessionalRequest"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Profissional atualizado com sucesso",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProfessionalResponse"
                  }
                }
              }
            },
            "400": {
              "$ref": "#/components/responses/BadRequestResponse"
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            },
            "404": {
              "$ref": "#/components/responses/NotFoundResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        },
        "delete": {
          "summary": "Remover Profissional",
          "description": "Remove um profissional",
          "operationId": "deleteProfessional",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "ID do Profissional (formato: prf_...)",
              "required": true,
              "schema": {
                "type": "string",
                "pattern": "^prf_[A-Z0-9]+$",
                "example": "prf_01JFAJCAANS6JN623KQDQ629YB"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "Profissional removido com sucesso"
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            },
            "404": {
              "$ref": "#/components/responses/NotFoundResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        }
      },
      "/professionals/cpf/{cpf}": {
        "get": {
          "summary": "Obter Profissional por CPF/CNPJ",
          "description": "Obtém um profissional pelo seu CPF ou CNPJ",
          "operationId": "getProfessionalByCpf",
          "parameters": [
            {
              "name": "cpf",
              "in": "path",
              "description": "CPF ou CNPJ do profissional (somente números)",
              "required": true,
              "schema": {
                "type": "string",
                "example": "12345678900"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Profissional retornado com sucesso",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProfessionalDetailResponse"
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            },
            "404": {
              "$ref": "#/components/responses/NotFoundResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        }
      },
      "/professionals/email/{email}": {
        "get": {
          "summary": "Obter Profissional por Email",
          "description": "Obtém um profissional pelo seu endereço de email",
          "operationId": "getProfessionalByEmail",
          "parameters": [
            {
              "name": "email",
              "in": "path",
              "description": "Email do profissional",
              "required": true,
              "schema": {
                "type": "string",
                "format": "email",
                "example": "profissional@example.com"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Profissional retornado com sucesso",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProfessionalDetailResponse"
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            },
            "404": {
              "$ref": "#/components/responses/NotFoundResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        }
      },
      "/professionals/note/{id}": {
        "get": {
          "summary": "Obter Nota do Profissional",
          "description": "Obtém a nota associada a um profissional",
          "operationId": "getProfessionalNote",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "ID do Profissional (formato: prf_...)",
              "required": true,
              "schema": {
                "type": "string",
                "pattern": "^prf_[A-Z0-9]+$",
                "example": "prf_01JJQ9CKNSPGJZNSYDPGJ97KBS"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Nota retornada com sucesso",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NoteResponse"
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            },
            "404": {
              "$ref": "#/components/responses/NotFoundResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        }
      },
      "/professionals/connections/{id}": {
        "post": {
          "summary": "Criar Conexão",
          "description": "Cria uma nova conexão entre cliente e profissional",
          "operationId": "createConnection",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "ID do Profissional (formato: prf_...)",
              "required": true,
              "schema": {
                "type": "string",
                "pattern": "^prf_[A-Z0-9]+$",
                "example": "prf_01JN9P2RS0H61S94FYXWEZHEQB"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateConnectionRequest"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Conexão criada com sucesso",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ConnectionResponse"
                  }
                }
              }
            },
            "400": {
              "$ref": "#/components/responses/BadRequestResponse"
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            },
            "404": {
              "$ref": "#/components/responses/NotFoundResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        }
      },
      "/professionals/note": {
        "post": {
          "summary": "Criar ou Atualizar Nota",
          "description": "Cria uma nova nota ou atualiza a existente para um profissional",
          "operationId": "createOrUpdateNote",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateUpdateNoteRequest"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Nota criada ou atualizada com sucesso",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NoteResponse"
                  }
                }
              }
            },
            "400": {
              "$ref": "#/components/responses/BadRequestResponse"
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            },
            "404": {
              "$ref": "#/components/responses/NotFoundResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        }
      },
      "/professionals/connection/{id}": {
        "put": {
          "summary": "Atualizar Conexão",
          "description": "Atualiza uma conexão existente entre cliente e profissional",
          "operationId": "updateConnection",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "ID da Conexão (formato: conn_...)",
              "required": true,
              "schema": {
                "type": "string",
                "pattern": "^conn_[A-Z0-9]+$",
                "example": "conn_01J8BCPXS5YZAGM91PWYWKJTMS"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateConnectionRequest"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Conexão atualizada com sucesso",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ConnectionResponse"
                  }
                }
              }
            },
            "400": {
              "$ref": "#/components/responses/BadRequestResponse"
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            },
            "404": {
              "$ref": "#/components/responses/NotFoundResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        }
      },
      "/professionals/config/private/{id}": {
        "patch": {
          "summary": "Atualizar Configurações Privadas",
          "description": "Atualiza configurações privadas de um profissional",
          "operationId": "updateProfessionalConfigPrivate",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "ID do Profissional (formato: prf_...)",
              "required": true,
              "schema": {
                "type": "string",
                "pattern": "^prf_[A-Z0-9]+$",
                "example": "prf_01JN9P2RS0H61S94FYXWEZHEQB"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateProfessionalConfigPrivateRequest"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Configurações atualizadas com sucesso",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProfessionalConfigResponse"
                  }
                }
              }
            },
            "400": {
              "$ref": "#/components/responses/BadRequestResponse"
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            },
            "404": {
              "$ref": "#/components/responses/NotFoundResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        }
      },
      "/professionals/config/status/{id}": {
        "patch": {
          "summary": "Atualizar Status das Configurações",
          "description": "Atualiza o status das configurações de um profissional",
          "operationId": "updateProfessionalConfigStatus",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "ID do Profissional (formato: prf_...)",
              "required": true,
              "schema": {
                "type": "string",
                "pattern": "^prf_[A-Z0-9]+$",
                "example": "prf_01JN9P2RS0H61S94FYXWEZHEQB"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateProfessionalConfigStatusRequest"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Status atualizado com sucesso",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProfessionalConfigResponse"
                  }
                }
              }
            },
            "400": {
              "$ref": "#/components/responses/BadRequestResponse"
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            },
            "404": {
              "$ref": "#/components/responses/NotFoundResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        }
      },
      "/professionals/pdvs/{id}": {
        "delete": {
          "summary": "Remover Solicitação de PDV",
          "description": "Remove uma solicitação de PDV feita por um profissional",
          "operationId": "deletePdvRequest",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "ID da Solicitação de PDV (formato: prdv_...)",
              "required": true,
              "schema": {
                "type": "string",
                "pattern": "^prdv_[A-Z0-9]+$",
                "example": "prdv_01JJQ9CKP09HEVYP0HY34QWC2F"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "Solicitação removida com sucesso"
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            },
            "404": {
              "$ref": "#/components/responses/NotFoundResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        }
      },
      "/professionals/connections/remove/{id}": {
        "delete": {
          "summary": "Remover Conexão",
          "description": "Remove uma conexão entre cliente e profissional",
          "operationId": "deleteConnection",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "ID da Conexão (formato: conn_...)",
              "required": true,
              "schema": {
                "type": "string",
                "pattern": "^conn_[A-Z0-9]+$",
                "example": "conn_01J8BCPXS5YZAGM91PWYWKJTMS"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "Conexão removida com sucesso"
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            },
            "404": {
              "$ref": "#/components/responses/NotFoundResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        }
      },
      "/professionals/connections/alert/{id}": {
        "delete": {
          "summary": "Remover Alerta de Conexão",
          "description": "Remove um alerta de conexão",
          "operationId": "deleteConnectionAlert",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "ID do Alerta de Conexão (formato: cnal_...)",
              "required": true,
              "schema": {
                "type": "string",
                "pattern": "^cnal_[A-Z0-9]+$",
                "example": "cnal_01JM5JRG5GMCQYBTM9FDKX8QR4"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "Alerta removido com sucesso"
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            },
            "404": {
              "$ref": "#/components/responses/NotFoundResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        }
      },
      "/roles": {
        "get": {
          "summary": "Listar Perfis de Acesso",
          "description": "Lista todos os perfis de acesso com filtros",
          "operationId": "listRoles",
          "parameters": [
            {
              "name": "search",
              "in": "query",
              "description": "Termo de busca",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "page",
              "in": "query",
              "description": "Número da página atual",
              "schema": {
                "type": "integer",
                "minimum": 1,
                "example": 1
              }
            },
            {
              "name": "size",
              "in": "query",
              "description": "Quantidade de itens por página",
              "schema": {
                "type": "integer",
                "minimum": 1,
                "example": 10
              }
            },
            {
              "name": "orderBy",
              "in": "query",
              "description": "Campo e direção da ordenação",
              "schema": {
                "type": "string",
                "example": "name-asc"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Lista de perfis de acesso retornada com sucesso",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/RoleListResponse"
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        }
      },
      "/roles/{id}": {
        "get": {
          "summary": "Obter Perfil de Acesso por ID",
          "description": "Obtém um perfil de acesso específico pelo seu ID",
          "operationId": "getRoleById",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "ID do Perfil de Acesso (formato: rol_...)",
              "required": true,
              "schema": {
                "type": "string",
                "pattern": "^rol_[A-Z0-9]+$",
                "example": "rol_01JK9Q0P4K1BT5JSK66RSC5HK9"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Perfil de acesso retornado com sucesso",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/RoleResponse"
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            },
            "404": {
              "$ref": "#/components/responses/NotFoundResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        },
        "delete": {
          "summary": "Remover Perfil de Acesso",
          "description": "Remove um perfil de acesso",
          "operationId": "deleteRole",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "ID do Perfil de Acesso (formato: rol_...)",
              "required": true,
              "schema": {
                "type": "string",
                "pattern": "^rol_[A-Z0-9]+$",
                "example": "rol_01JK9Q0P4K1BT5JSK66RSC5HK9"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "Perfil de acesso removido com sucesso"
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            },
            "404": {
              "$ref": "#/components/responses/NotFoundResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        }
      },
      "/roles/master/{customerId}": {
        "get": {
          "summary": "Obter Perfil Mestre por Cliente",
          "description": "Obtém o perfil de acesso mestre associado a um cliente",
          "operationId": "getMasterRoleByCustomerId",
          "parameters": [
            {
              "name": "customerId",
              "in": "path",
              "description": "ID do Cliente (formato: cust_...)",
              "required": true,
              "schema": {
                "type": "string",
                "pattern": "^cust_[A-Z0-9]+$",
                "example": "cust_01J4J2ZGBCZZTN6EHR6T52FHS3"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Perfil mestre retornado com sucesso",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/RoleResponse"
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            },
            "404": {
              "$ref": "#/components/responses/NotFoundResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        }
      },
      "/roles/brand": {
        "post": {
          "summary": "Criar Perfil de Acesso para Marca",
          "description": "Cria um novo perfil de acesso para um cliente do tipo marca",
          "operationId": "createBrandRole",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateBrandRoleRequest"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Perfil de acesso criado com sucesso",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/RoleResponse"
                  }
                }
              }
            },
            "400": {
              "$ref": "#/components/responses/BadRequestResponse"
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        },
        "put": {
          "summary": "Atualizar Perfil de Acesso de Marca",
          "description": "Atualiza um perfil de acesso existente para cliente do tipo marca",
          "operationId": "updateBrandRole",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateBrandRoleRequest"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Perfil de acesso atualizado com sucesso",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/RoleResponse"
                  }
                }
              }
            },
            "400": {
              "$ref": "#/components/responses/BadRequestResponse"
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            },
            "404": {
              "$ref": "#/components/responses/NotFoundResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        }
      },
      "/roles/dealer": {
        "post": {
          "summary": "Criar Perfil de Acesso para Distribuidor",
          "description": "Cria um novo perfil de acesso para um cliente do tipo distribuidor",
          "operationId": "createDealerRole",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateDealerRoleRequest"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Perfil de acesso criado com sucesso",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/RoleResponse"
                  }
                }
              }
            },
            "400": {
              "$ref": "#/components/responses/BadRequestResponse"
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        },
        "put": {
          "summary": "Atualizar Perfil de Acesso de Distribuidor",
          "description": "Atualiza um perfil de acesso existente para cliente do tipo distribuidor",
          "operationId": "updateDealerRole",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateDealerRoleRequest"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Perfil de acesso atualizado com sucesso",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/RoleResponse"
                  }
                }
              }
            },
            "400": {
              "$ref": "#/components/responses/BadRequestResponse"
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            },
            "404": {
              "$ref": "#/components/responses/NotFoundResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        }
      },
      "/roles/hybrid": {
        "post": {
          "summary": "Criar Perfil de Acesso para Híbrido",
          "description": "Cria um novo perfil de acesso para um cliente do tipo híbrido",
          "operationId": "createHybridRole",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateHybridRoleRequest"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Perfil de acesso criado com sucesso",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/RoleResponse"
                  }
                }
              }
            },
            "400": {
              "$ref": "#/components/responses/BadRequestResponse"
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        },
        "put": {
          "summary": "Atualizar Perfil de Acesso de Híbrido",
          "description": "Atualiza um perfil de acesso existente para cliente do tipo híbrido",
          "operationId": "updateHybridRole",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateHybridRoleRequest"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Perfil de acesso atualizado com sucesso",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/RoleResponse"
                  }
                }
              }
            },
            "400": {
              "$ref": "#/components/responses/BadRequestResponse"
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            },
            "404": {
              "$ref": "#/components/responses/NotFoundResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        }
      },
      "/subscriptions": {
        "get": {
          "summary": "Listar Assinaturas",
          "description": "Lista assinaturas com suporte a filtros e paginação",
          "operationId": "listSubscriptions",
          "parameters": [
            {
              "name": "search",
              "in": "query",
              "description": "Termo de busca",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "page",
              "in": "query",
              "description": "Número da página atual",
              "schema": {
                "type": "integer",
                "minimum": 1,
                "example": 1
              }
            },
            {
              "name": "size",
              "in": "query",
              "description": "Quantidade de itens por página",
              "schema": {
                "type": "integer",
                "minimum": 1,
                "example": 10
              }
            },
            {
              "name": "orderBy",
              "in": "query",
              "description": "Campo e direção da ordenação",
              "schema": {
                "type": "string",
                "example": "name-asc"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Lista de assinaturas retornada com sucesso",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/SubscriptionListResponse"
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        },
        "post": {
          "summary": "Criar Assinatura",
          "description": "Cria uma nova assinatura",
          "operationId": "createSubscription",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateSubscriptionRequest"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Assinatura criada com sucesso",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/SubscriptionResponse"
                  }
                }
              }
            },
            "400": {
              "$ref": "#/components/responses/BadRequestResponse"
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        }
      },
      "/subscriptions/{id}": {
        "get": {
          "summary": "Obter Assinatura por ID",
          "description": "Obtém uma assinatura específica pelo seu ID",
          "operationId": "getSubscriptionById",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "ID da Assinatura (formato: sub_...)",
              "required": true,
              "schema": {
                "type": "string",
                "pattern": "^sub_[A-Z0-9]+$",
                "example": "sub_01JK9Q0P5NX98PK1J3QETAQ6Y4"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Assinatura retornada com sucesso",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/SubscriptionDetailResponse"
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            },
            "404": {
              "$ref": "#/components/responses/NotFoundResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        },
        "put": {
          "summary": "Atualizar Assinatura",
          "description": "Atualiza uma assinatura existente",
          "operationId": "updateSubscription",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "ID da Assinatura (formato: sub_...)",
              "required": true,
              "schema": {
                "type": "string",
                "pattern": "^sub_[A-Z0-9]+$",
                "example": "sub_01J1C1ZN10DXWFWH0F8229Q0S5"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateSubscriptionRequest"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Assinatura atualizada com sucesso",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/SubscriptionResponse"
                  }
                }
              }
            },
            "400": {
              "$ref": "#/components/responses/BadRequestResponse"
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            },
            "404": {
              "$ref": "#/components/responses/NotFoundResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        }
      },
      "/subscriptions/flags": {
        "get": {
          "summary": "Listar Flags de Assinaturas",
          "description": "Lista todas as flags específicas para assinaturas",
          "operationId": "listSubscriptionFlags",
          "responses": {
            "200": {
              "description": "Lista de flags retornada com sucesso",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/FlagResponse"
                    }
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        }
      },
      "/subscriptions/site": {
        "get": {
          "summary": "Listar Assinaturas para Site",
          "description": "Lista assinaturas formatadas para exibição no site",
          "operationId": "listSubscriptionsForSite",
          "parameters": [
            {
              "name": "format",
              "in": "query",
              "description": "Formato de retorno (site ou app)",
              "schema": {
                "type": "string",
                "enum": ["site", "app"],
                "example": "site"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Lista de assinaturas retornada com sucesso",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/SubscriptionSiteListResponse"
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        }
      },
      "/users": {
        "get": {
          "summary": "Listar Usuários",
          "description": "Lista usuários com suporte a filtros e paginação",
          "operationId": "listUsers",
          "parameters": [
            {
              "name": "search",
              "in": "query",
              "description": "Termo de busca em nome, email ou CPF",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "status",
              "in": "query",
              "description": "Status do usuário",
              "schema": {
                "type": "string",
                "enum": ["active", "inactive"]
              }
            },
            {
              "name": "page",
              "in": "query",
              "description": "Número da página atual",
              "schema": {
                "type": "integer",
                "minimum": 1,
                "example": 1
              }
            },
            {
              "name": "size",
              "in": "query",
              "description": "Quantidade de itens por página",
              "schema": {
                "type": "integer",
                "minimum": 1,
                "example": 10
              }
            },
            {
              "name": "orderBy",
              "in": "query",
              "description": "Campo e direção da ordenação",
              "schema": {
                "type": "string",
                "example": "name-asc"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Lista de usuários retornada com sucesso",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UserListResponse"
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        }
      },
      "/users/flags": {
        "get": {
          "summary": "Listar Flags de Usuários",
          "description": "Lista todas as flags específicas para usuários",
          "operationId": "listUserFlags",
          "responses": {
            "200": {
              "description": "Lista de flags retornada com sucesso",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/FlagResponse"
                    }
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        }
      },
      "/users/email-cpf": {
        "post": {
          "summary": "Verificar Existência de Email ou CPF",
          "description": "Verifica se já existe um usuário com o email ou CPF fornecido",
          "operationId": "checkEmailCpfExists",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckEmailCpfRequest"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Verificação concluída com sucesso",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/EmailCpfExistsResponse"
                  }
                }
              }
            },
            "400": {
              "$ref": "#/components/responses/BadRequestResponse"
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        }
      },
      "/users/dashboard": {
        "post": {
          "summary": "Criar Usuário do Dashboard",
          "description": "Cria um novo usuário para acesso ao dashboard",
          "operationId": "createDashboardUser",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateDashboardUserRequest"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Usuário criado com sucesso",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UserResponse"
                  }
                }
              }
            },
            "400": {
              "$ref": "#/components/responses/BadRequestResponse"
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        },
        "put": {
          "summary": "Atualizar Usuário do Dashboard",
          "description": "Atualiza um usuário existente do dashboard",
          "operationId": "updateDashboardUser",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateDashboardUserRequest"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Usuário atualizado com sucesso",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UserResponse"
                  }
                }
              }
            },
            "400": {
              "$ref": "#/components/responses/BadRequestResponse"
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            },
            "404": {
              "$ref": "#/components/responses/NotFoundResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        }
      },
      "/users/labelers": {
        "get": {
          "summary": "Listar Etiquetadores",
          "description": "Lista todos os usuários etiquetadores",
          "operationId": "listLabelers",
          "parameters": [
            {
              "name": "search",
              "in": "query",
              "description": "Termo de busca",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "page",
              "in": "query",
              "description": "Número da página atual",
              "schema": {
                "type": "integer",
                "minimum": 1,
                "example": 1
              }
            },
            {
              "name": "size",
              "in": "query",
              "description": "Quantidade de itens por página",
              "schema": {
                "type": "integer",
                "minimum": 1,
                "example": 10
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Lista de etiquetadores retornada com sucesso",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/LabelerListResponse"
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        },
        "post": {
          "summary": "Criar Etiquetador",
          "description": "Cria um novo usuário etiquetador",
          "operationId": "createLabeler",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateLabelerRequest"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Etiquetador criado com sucesso",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/LabelerResponse"
                  }
                }
              }
            },
            "400": {
              "$ref": "#/components/responses/BadRequestResponse"
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        },
        "put": {
          "summary": "Atualizar Etiquetador",
          "description": "Atualiza um usuário etiquetador existente",
          "operationId": "updateLabeler",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateLabelerRequest"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Etiquetador atualizado com sucesso",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/LabelerResponse"
                  }
                }
              }
            },
            "400": {
              "$ref": "#/components/responses/BadRequestResponse"
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            },
            "404": {
              "$ref": "#/components/responses/NotFoundResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        }
      },
      "/users/labelers/brand": {
        "post": {
          "summary": "Criar Etiquetador de Marca",
          "description": "Cria um novo etiquetador para cliente do tipo marca",
          "operationId": "createBrandLabeler",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateBrandLabelerRequest"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Etiquetador criado com sucesso",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/LabelerResponse"
                  }
                }
              }
            },
            "400": {
              "$ref": "#/components/responses/BadRequestResponse"
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        }
      },
      "/users/labelers/dealer": {
        "post": {
          "summary": "Criar Etiquetador de Distribuidor",
          "description": "Cria um novo etiquetador para cliente do tipo distribuidor",
          "operationId": "createDealerLabeler",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateDealerLabelerRequest"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Etiquetador criado com sucesso",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/LabelerResponse"
                  }
                }
              }
            },
            "400": {
              "$ref": "#/components/responses/BadRequestResponse"
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        }
      },
      "/users/labelers/hybrid": {
        "post": {
          "summary": "Criar Etiquetador de Híbrido",
          "description": "Cria um novo etiquetador para cliente do tipo híbrido",
          "operationId": "createHybridLabeler",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateHybridLabelerRequest"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Etiquetador criado com sucesso",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/LabelerResponse"
                  }
                }
              }
            },
            "400": {
              "$ref": "#/components/responses/BadRequestResponse"
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        }
      },
      "/users/dashboard/brand": {
        "post": {
          "summary": "Criar Usuário Dashboard de Marca",
          "description": "Cria um novo usuário dashboard para cliente do tipo marca",
          "operationId": "createBrandDashboardUser",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateBrandDashboardUserRequest"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Usuário dashboard criado com sucesso",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UserResponse"
                  }
                }
              }
            },
            "400": {
              "$ref": "#/components/responses/BadRequestResponse"
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        }
      },
      "/users/dashboard/dealer": {
        "post": {
          "summary": "Criar Usuário Dashboard de Distribuidor",
          "description": "Cria um novo usuário dashboard para cliente do tipo distribuidor",
          "operationId": "createDealerDashboardUser",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateDealerDashboardUserRequest"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Usuário dashboard criado com sucesso",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UserResponse"
                  }
                }
              }
            },
            "400": {
              "$ref": "#/components/responses/BadRequestResponse"
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        }
      },
      "/users/dashboard/hybrid": {
        "post": {
          "summary": "Criar Usuário Dashboard de Híbrido",
          "description": "Cria um novo usuário dashboard para cliente do tipo híbrido",
          "operationId": "createHybridDashboardUser",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateHybridDashboardUserRequest"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Usuário dashboard criado com sucesso",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UserResponse"
                  }
                }
              }
            },
            "400": {
              "$ref": "#/components/responses/BadRequestResponse"
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        }
      },
      "/users/master/{customerId}": {
        "get": {
          "summary": "Obter Usuário Master por Cliente",
          "description": "Obtém o usuário master associado a um cliente",
          "operationId": "getMasterUserByCustomerId",
          "parameters": [
            {
              "name": "customerId",
              "in": "path",
              "description": "ID do Cliente (formato: cust_...)",
              "required": true,
              "schema": {
                "type": "string",
                "pattern": "^cust_[A-Z0-9]+$",
                "example": "cust_01J4J2ZGBCZZTN6EHR6T52FHS3"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Usuário master retornado com sucesso",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UserDetailResponse"
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            },
            "404": {
              "$ref": "#/components/responses/NotFoundResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        }
      },
      "/users/pdvs": {
        "get": {
          "summary": "Listar PDVs do Usuário",
          "description": "Lista os PDVs associados ao usuário atual",
          "operationId": "listUserPdvs",
          "responses": {
            "200": {
              "description": "Lista de PDVs retornada com sucesso",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/PdvBriefResponse"
                    }
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        }
      },
      "/users/dealers": {
        "get": {
          "summary": "Listar IDs dos Distribuidores",
          "description": "Lista os IDs de todos os distribuidores associados ao usuário",
          "operationId": "listUserDealerIds",
          "responses": {
            "200": {
              "description": "Lista de IDs retornada com sucesso",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "pattern": "^cust_[A-Z0-9]+$",
                      "example": "cust_01HWD6Q1BNHK8MFXT0XNQX0Z3V"
                    }
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        }
      },
      "/users/status/{id}": {
        "patch": {
          "summary": "Atualizar Status do Usuário",
          "description": "Atualiza o status de um usuário existente",
          "operationId": "updateUserStatus",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "ID do Usuário (formato: usr_...)",
              "required": true,
              "schema": {
                "type": "string",
                "pattern": "^usr_[A-Z0-9]+$",
                "example": "usr_01J4J62RCMS5DTFYNTD2NCHZE0"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateUserStatusRequest"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Status do usuário atualizado com sucesso",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UserResponse"
                  }
                }
              }
            },
            "400": {
              "$ref": "#/components/responses/BadRequestResponse"
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            },
            "404": {
              "$ref": "#/components/responses/NotFoundResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        }
      },
      "/users/password": {
        "patch": {
          "summary": "Atualizar Senha",
          "description": "Atualiza a senha de um usuário existente",
          "operationId": "updateUserPassword",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdatePasswordRequest"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Senha atualizada com sucesso",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "example": "Senha atualizada com sucesso"
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "$ref": "#/components/responses/BadRequestResponse"
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            },
            "404": {
              "$ref": "#/components/responses/NotFoundResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        }
      },
      "/users/terms/{id}": {
        "patch": {
          "summary": "Atualizar Profissional",
          "description": "Atualiza um profissional existente",
          "operationId": "updateProfessional",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "ID do Profissional (formato: prf_...)",
              "required": true,
              "schema": {
                "type": "string",
                "pattern": "^prf_[A-Z0-9]+$",
                "example": "prf_01JN9P2RS0H61S94FYXWEZHEQB"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateProfessionalRequest"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Profissional atualizado com sucesso",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProfessionalResponse"
                  }
                }
              }
            },
            "400": {
              "$ref": "#/components/responses/BadRequestResponse"
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            },
            "404": {
              "$ref": "#/components/responses/NotFoundResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        },
        "delete": {
          "summary": "Remover Profissional",
          "description": "Remove um profissional",
          "operationId": "deleteProfessional",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "ID do Profissional (formato: prf_...)",
              "required": true,
              "schema": {
                "type": "string",
                "pattern": "^prf_[A-Z0-9]+$",
                "example": "prf_01JFAJCAANS6JN623KQDQ629YB"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "Profissional removido com sucesso"
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            },
            "404": {
              "$ref": "#/components/responses/NotFoundResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        }
      },
      "/users/{id}": {
        "delete": {
          "summary": "Remover Usuário",
          "description": "Remove um usuário pelo seu ID",
          "operationId": "deleteUser",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "ID do Usuário (formato: usr_...)",
              "required": true,
              "schema": {
                "type": "string",
                "pattern": "^usr_[A-Z0-9]+$",
                "example": "usr_01HWD6Q1BNHK8MFXT0XNQX0Z3V"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "Usuário removido com sucesso"
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            },
            "404": {
              "$ref": "#/components/responses/NotFoundResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        }
      },
      "/interactions/{id}": {
        "get": {
          "summary": "Obter Interação por ID",
          "description": "Obtém uma interação específica pelo seu ID",
          "operationId": "getInteractionById",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "ID da Interação (formato: intr_...)",
              "required": true,
              "schema": {
                "type": "string",
                "pattern": "^intr_[A-Z0-9]+$",
                "example": "intr_01JK9QSPB43JQ4B5JTZDYTG7E4"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Interação retornada com sucesso",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/InteractionResponse"
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedResponse"
            },
            "404": {
              "$ref": "#/components/responses/NotFoundResponse"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        }
      }
    },
    "components": {
      "schemas": {
        "ApiKeyListResponse": {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ApiKeyResponse"
              }
            },
            "pagination": {
              "$ref": "#/components/schemas/Pagination"
            }
          }
        },
        "ApiKeyResponse": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "example": "apk_01J140PN98KZHT9R273B5TCHD4"
            },
            "name": {
              "type": "string",
              "example": "API Key de Marca"
            },
            "description": {
              "type": "string",
              "example": "Chave para integração com sistema da marca"
            },
            "key": {
              "type": "string",
              "example": "byefive_pk_01J140PN98KZHT9R273B5TCHD4"
            },
            "status": {
              "type": "string",
              "enum": ["active", "inactive"],
              "example": "active"
            },
            "pathRoute": {
              "type": "string",
              "example": "/customers"
            },
            "groupName": {
              "type": "string",
              "example": "customers"
            },
            "customerId": {
              "type": "string",
              "example": "cust_01J1TSMZSMQAE9GX61HV7F6QRF"
            },
            "createdAt": {
              "type": "string",
              "format": "date-time"
            },
            "updatedAt": {
              "type": "string",
              "format": "date-time"
            }
          }
        },
        "CreateApiKeyRequest": {
          "type": "object",
          "required": ["name", "status", "pathRoute", "groupName"],
          "properties": {
            "name": {
              "type": "string",
              "example": "API Key de Marca"
            },
            "description": {
              "type": "string",
              "example": "Chave para integração com sistema da marca"
            },
            "status": {
              "type": "string",
              "enum": ["active", "inactive"],
              "example": "active"
            },
            "pathRoute": {
              "type": "string",
              "example": "/customers"
            },
            "groupName": {
              "type": "string",
              "example": "customers"
            },
            "customerId": {
              "type": "string",
              "example": "cust_01J1TSMZSMQAE9GX61HV7F6QRF"
            }
          }
        },
        "UpdateApiKeyRequest": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "example": "API Key de Marca Atualizada"
            },
            "description": {
              "type": "string",
              "example": "Chave para integração com sistema da marca - atualizada"
            },
            "status": {
              "type": "string",
              "enum": ["active", "inactive"],
              "example": "inactive"
            },
            "pathRoute": {
              "type": "string",
              "example": "/customers/brand"
            },
            "groupName": {
              "type": "string",
              "example": "customers"
            }
          }
        },
        "ReleaseListResponse": {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ReleaseResponse"
              }
            },
            "pagination": {
              "$ref": "#/components/schemas/Pagination"
            }
          }
        },
        "ReleaseResponse": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "example": "appr_01J13XB4TYYMASP3J5NGKEYSVB"
            },
            "name": {
              "type": "string",
              "example": "ByeFive Mobile"
            },
            "description": {
              "type": "string",
              "example": "Aplicativo móvel do ByeFive"
            },
            "version": {
              "type": "string",
              "example": "1.0.0"
            },
            "icon": {
              "type": "string",
              "example": "https://storage.googleapis.com/byefive-public/apps/mobile.png"
            },
            "platform": {
              "type": "string",
              "enum": ["android", "ios", "web"],
              "example": "android"
            },
            "links": {
              "type": "object",
              "properties": {
                "android": {
                  "type": "string",
                  "example": "https://play.google.com/store/apps/details?id=com.byefive.mobile"
                },
                "ios": {
                  "type": "string",
                  "example": "https://apps.apple.com/br/app/byefive/id123456789"
                },
                "web": {
                  "type": "string",
                  "example": "https://app.byefive.com.br"
                }
              }
            },
            "customerId": {
              "type": "string",
              "example": "cust_01J1TSMZSMQAE9GX61HV7F6QRF"
            },
            "storeId": {
              "type": "string",
              "example": "com.byefive.mobile"
            },
            "createdAt": {
              "type": "string",
              "format": "date-time"
            },
            "updatedAt": {
              "type": "string",
              "format": "date-time"
            }
          }
        },
        "CreateReleaseRequest": {
          "type": "object",
          "required": ["name", "platform"],
          "properties": {
            "name": {
              "type": "string",
              "example": "ByeFive Mobile"
            },
            "description": {
              "type": "string",
              "example": "Aplicativo móvel do ByeFive"
            },
            "version": {
              "type": "string",
              "example": "1.0.0"
            },
            "icon": {
              "type": "string",
              "example": "https://storage.googleapis.com/byefive-public/apps/mobile.png"
            },
            "platform": {
              "type": "string",
              "enum": ["android", "ios", "web"],
              "example": "android"
            },
            "links": {
              "type": "object",
              "properties": {
                "android": {
                  "type": "string",
                  "example": "https://play.google.com/store/apps/details?id=com.byefive.mobile"
                },
                "ios": {
                  "type": "string",
                  "example": "https://apps.apple.com/br/app/byefive/id123456789"
                },
                "web": {
                  "type": "string",
                  "example": "https://app.byefive.com.br"
                }
              }
            },
            "customerId": {
              "type": "string",
              "example": "cust_01J1TSMZSMQAE9GX61HV7F6QRF"
            },
            "storeId": {
              "type": "string",
              "example": "com.byefive.mobile"
            }
          }
        },
        "UpdateReleaseRequest": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "example": "ByeFive Mobile"
            },
            "description": {
              "type": "string",
              "example": "Aplicativo móvel do ByeFive - Atualizado"
            },
            "version": {
              "type": "string",
              "example": "1.1.0"
            },
            "icon": {
              "type": "string",
              "example": "https://storage.googleapis.com/byefive-public/apps/mobile-updated.png"
            },
            "links": {
              "type": "object",
              "properties": {
                "android": {
                  "type": "string",
                  "example": "https://play.google.com/store/apps/details?id=com.byefive.mobile"
                },
                "ios": {
                  "type": "string",
                  "example": "https://apps.apple.com/br/app/byefive/id123456789"
                },
                "web": {
                  "type": "string",
                  "example": "https://app.byefive.com.br"
                }
              }
            }
          }
        },
        "VersionListResponse": {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/VersionResponse"
              }
            },
            "pagination": {
              "$ref": "#/components/schemas/Pagination"
            }
          }
        },
        "VersionResponse": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "example": "appv_01J13XR0T1Z5CNJGVA73EC3XY4"
            },
            "version": {
              "type": "string",
              "example": "1.0.0"
            },
            "changelog": {
              "type": "string",
              "example": "- Lançamento inicial\n- Suporte a login com biometria\n- Novos recursos de etiquetagem"
            },
            "releaseId": {
              "type": "string",
              "example": "appr_01J13XB4TYYMASP3J5NGKEYSVB"
            },
            "createdAt": {
              "type": "string",
              "format": "date-time"
            },
            "updatedAt": {
              "type": "string",
              "format": "date-time"
            }
          }
        },
        "CreateVersionRequest": {
          "type": "object",
          "required": ["version", "releaseId"],
          "properties": {
            "version": {
              "type": "string",
              "example": "1.0.0"
            },
            "changelog": {
              "type": "string",
              "example": "- Lançamento inicial\n- Suporte a login com biometria\n- Novos recursos de etiquetagem"
            },
            "releaseId": {
              "type": "string",
              "example": "appr_01J13XB4TYYMASP3J5NGKEYSVB"
            }
          }
        },
        "UpdateVersionRequest": {
          "type": "object",
          "required": ["changelog"],
          "properties": {
            "changelog": {
              "type": "string",
              "example": "- Lançamento inicial\n- Suporte a login com biometria\n- Novos recursos de etiquetagem\n- Correções de bugs"
            }
          }
        },
        "RequestCodeRequest": {
          "type": "object",
          "required": ["cpf"],
          "properties": {
            "cpf": {
              "type": "string",
              "example": "12345678900"
            }
          }
        },
        "RequestCodeResponse": {
          "type": "object",
          "properties": {
            "message": {
              "type": "string",
              "example": "Código de verificação enviado com sucesso"
            },
            "expiresIn": {
              "type": "integer",
              "example": 300
            }
          }
        },
        "ValidateCodeRequest": {
          "type": "object",
          "required": ["cpf", "code"],
          "properties": {
            "cpf": {
              "type": "string",
              "example": "12345678900"
            },
            "code": {
              "type": "string",
              "example": "123456"
            }
          }
        },
        "DashboardLoginRequest": {
          "type": "object",
          "required": ["email", "password"],
          "properties": {
            "email": {
              "type": "string",
              "format": "email",
              "example": "usuario@exemplo.com.br"
            },
            "password": {
              "type": "string",
              "format": "password",
              "example": "Senha@123"
            },
            "type": {
              "type": "string",
              "enum": ["dashboard"],
              "example": "dashboard"
            }
          }
        },
        "LabelerLoginRequest": {
          "type": "object",
          "required": ["cpf", "password"],
          "properties": {
            "cpf": {
              "type": "string",
              "example": "12345678900"
            },
            "password": {
              "type": "string",
              "format": "password",
              "example": "Senha@123"
            },
            "type": {
              "type": "string",
              "enum": ["labeler"],
              "example": "labeler"
            }
          }
        },
        "AuthResponse": {
          "type": "object",
          "properties": {
            "token": {
              "type": "string",
              "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c3JfMDFKNEo2MlJDTVM1RFRGWk5URDJOQzEEGLTAiLCJpYXQiOjE2NzU5MzY4NjIsImV4cCI6MTY3NjAyMzI2Mn0.abcdefghijklmnopqrstuvwxyz123456"
            },
            "user": {
              "$ref": "#/components/schemas/UserDetailResponse"
            }
          }
        },
        "CheckPasswordRequest": {
          "type": "object",
          "required": ["password"],
          "properties": {
            "password": {
              "type": "string",
              "format": "password",
              "example": "Senha@123"
            }
          }
        },
        "CheckPasswordResponse": {
          "type": "object",
          "properties": {
            "valid": {
              "type": "boolean",
              "example": true
            }
          }
        },
        "CheckInListResponse": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/CheckInResponse"
          }
        },
        "CheckInResponse": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "example": "chk_01JK9QSPB43JQ4B5JTZDYTG7E4"
            },
            "professionalId": {
              "type": "string",
              "example": "prf_01JJZRMFRY03PN3KVHHNJW8XZ7"
            },
            "pdvId": {
              "type": "string",
              "example": "pdv_01J6T5MA227QN594Z5D7SKCWBE"
            },
            "timestamp": {
              "type": "string",
              "format": "date-time"
            },
            "latitude": {
              "type": "number",
              "format": "float",
              "example": -23.55052
            },
            "longitude": {
              "type": "number",
              "format": "float",
              "example": -46.633309
            },
            "pdv": {
              "$ref": "#/components/schemas/PdvBriefResponse"
            },
            "createdAt": {
              "type": "string",
              "format": "date-time"
            },
            "updatedAt": {
              "type": "string",
              "format": "date-time"
            }
          }
        },
        "CreateCheckInRequest": {
          "type": "object",
          "required": [
            "professionalId",
            "pdvId",
            "timestamp",
            "latitude",
            "longitude"
          ],
          "properties": {
            "professionalId": {
              "type": "string",
              "example": "prf_01JJZRMFRY03PN3KVHHNJW8XZ7"
            },
            "pdvId": {
              "type": "string",
              "example": "pdv_01J6T5MA227QN594Z5D7SKCWBE"
            },
            "timestamp": {
              "type": "string",
              "format": "date-time"
            },
            "latitude": {
              "type": "number",
              "format": "float",
              "example": -23.55052
            },
            "longitude": {
              "type": "number",
              "format": "float",
              "example": -46.633309
            }
          }
        },
        "BlockedEntitiesListResponse": {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/BlockedEntityResponse"
              }
            },
            "pagination": {
              "$ref": "#/components/schemas/Pagination"
            }
          }
        },
        "BlockedEntityResponse": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "example": "ent_01J163TXPD54YR7C0RTSEB9PMD"
            },
            "entityId": {
              "type": "string",
              "example": "appr_01J13WXDT3BGPXKAMBG641VYG0"
            },
            "createdAt": {
              "type": "string",
              "format": "date-time"
            },
            "updatedAt": {
              "type": "string",
              "format": "date-time"
            }
          }
        },
        "BlockEntityRequest": {
          "type": "object",
          "required": ["entityId"],
          "properties": {
            "entityId": {
              "type": "string",
              "example": "appr_01J13WXDT3BGPXKAMBG641VYG0"
            }
          }
        },
        "CustomerProfileListResponse": {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/CustomerProfileResponse"
              }
            },
            "pagination": {
              "$ref": "#/components/schemas/Pagination"
            }
          }
        },
        "CustomerProfileResponse": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "example": "prof_01J04CZXDVZAZ4821KG5FT8EY8"
            },
            "customerId": {
              "type": "string",
              "example": "cust_01J4J2ZGBCZZTN6EHR6T52FHS3"
            },
            "email": {
              "type": "string",
              "format": "email",
              "example": "contato@empresa.com.br"
            },
            "phone": {
              "type": "string",
              "example": "11999999999"
            },
            "twitter": {
              "type": "string",
              "example": "@empresa"
            },
            "facebook": {
              "type": "string",
              "example": "empresa"
            },
            "instagram": {
              "type": "string",
              "example": "@empresa"
            },
            "linkedin": {
              "type": "string",
              "example": "empresa"
            },
            "youtube": {
              "type": "string",
              "example": "@empresa"
            },
            "tiktok": {
              "type": "string",
              "example": "@empresa"
            },
            "website": {
              "type": "string",
              "example": "https://www.empresa.com.br"
            },
            "whatsapp": {
              "type": "string",
              "example": "11999999999"
            },
            "about": {
              "type": "string",
              "example": "Empresa especializada em produtos para cabelo."
            },
            "createdAt": {
              "type": "string",
              "format": "date-time"
            },
            "updatedAt": {
              "type": "string",
              "format": "date-time"
            }
          }
        },
        "CreateCustomerProfileRequest": {
          "type": "object",
          "required": ["customerId", "email"],
          "properties": {
            "customerId": {
              "type": "string",
              "example": "cust_01J4J2ZGBCZZTN6EHR6T52FHS3"
            },
            "email": {
              "type": "string",
              "format": "email",
              "example": "contato@empresa.com.br"
            },
            "phone": {
              "type": "string",
              "example": "11999999999"
            },
            "twitter": {
              "type": "string",
              "example": "@empresa"
            },
            "facebook": {
              "type": "string",
              "example": "empresa"
            },
            "instagram": {
              "type": "string",
              "example": "@empresa"
            },
            "linkedin": {
              "type": "string",
              "example": "empresa"
            },
            "youtube": {
              "type": "string",
              "example": "@empresa"
            },
            "tiktok": {
              "type": "string",
              "example": "@empresa"
            },
            "website": {
              "type": "string",
              "example": "https://www.empresa.com.br"
            },
            "whatsapp": {
              "type": "string",
              "example": "11999999999"
            },
            "about": {
              "type": "string",
              "example": "Empresa especializada em produtos para cabelo."
            }
          }
        },
        "UpdateCustomerProfileRequest": {
          "type": "object",
          "properties": {
            "email": {
              "type": "string",
              "format": "email",
              "example": "contato@empresa.com.br"
            },
            "phone": {
              "type": "string",
              "example": "11999999999"
            },
            "twitter": {
              "type": "string",
              "example": "@empresa"
            },
            "facebook": {
              "type": "string",
              "example": "empresa"
            },
            "instagram": {
              "type": "string",
              "example": "@empresa"
            },
            "linkedin": {
              "type": "string",
              "example": "empresa"
            },
            "youtube": {
              "type": "string",
              "example": "@empresa"
            },
            "tiktok": {
              "type": "string",
              "example": "@empresa"
            },
            "website": {
              "type": "string",
              "example": "https://www.empresa.com.br"
            },
            "whatsapp": {
              "type": "string",
              "example": "11999999999"
            },
            "about": {
              "type": "string",
              "example": "Empresa especializada em produtos para cabelo."
            }
          }
        },
        "CustomerListResponse": {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/CustomerResponse"
              }
            },
            "pagination": {
              "$ref": "#/components/schemas/Pagination"
            }
          }
        },
        "CustomerResponse": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "example": "cust_01J4J2ZGBCZZTN6EHR6T52FHS3"
            },
            "companyName": {
              "type": "string",
              "example": "Empresa de Cosméticos"
            },
            "fantasyName": {
              "type": "string",
              "example": "Empresa Cosméticos"
            },
            "document": {
              "type": "string",
              "example": "12345678000190"
            },
            "documentType": {
              "type": "string",
              "enum": ["cnpj", "cpf"],
              "example": "cnpj"
            },
            "type": {
              "type": "string",
              "enum": ["brand", "dealer", "hybrid"],
              "example": "brand"
            },
            "contactName": {
              "type": "string",
              "example": "João Silva"
            },
            "contactEmail": {
              "type": "string",
              "format": "email",
              "example": "joao.silva@empresa.com.br"
            },
            "contactPhone": {
              "type": "string",
              "example": "11999999999"
            },
            "status": {
              "type": "string",
              "enum": ["active", "inactive", "pending"],
              "example": "active"
            },
            "icon": {
              "type": "string",
              "format": "uri",
              "example": "https://storage.googleapis.com/byefive-public/customers/empresa.png"
            },
            "logo": {
              "type": "string",
              "format": "uri",
              "example": "https://storage.googleapis.com/byefive-public/customers/empresa-logo.png"
            },
            "sectors": {
              "type": "array",
              "items": {
                "type": "string",
                "example": "cosméticos"
              }
            },
            "kindOf": {
              "type": "string",
              "enum": ["brand", "network", "distributer"],
              "example": "brand"
            },
            "createdAt": {
              "type": "string",
              "format": "date-time"
            },
            "updatedAt": {
              "type": "string",
              "format": "date-time"
            }
          }
        },
        "CustomerDetailResponse": {
          "allOf": [
            {
              "$ref": "#/components/schemas/CustomerResponse"
            },
            {
              "type": "object",
              "properties": {
                "address": {
                  "$ref": "#/components/schemas/AddressResponse"
                },
                "profiles": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerProfileResponse"
                  }
                },
                "modules": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ModuleResponse"
                  }
                },
                "subscriptions": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SubscriptionBriefResponse"
                  }
                }
              }
            }
          ]
        },
        "CustomerBriefResponse": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "example": "cust_01J4J2ZGBCZZTN6EHR6T52FHS3"
            },
            "companyName": {
              "type": "string",
              "example": "Empresa de Cosméticos"
            },
            "fantasyName": {
              "type": "string",
              "example": "Empresa Cosméticos"
            },
            "type": {
              "type": "string",
              "enum": ["brand", "dealer", "hybrid"],
              "example": "brand"
            },
            "status": {
              "type": "string",
              "enum": ["active", "inactive", "pending"],
              "example": "active"
            },
            "icon": {
              "type": "string",
              "format": "uri",
              "example": "https://storage.googleapis.com/byefive-public/customers/empresa.png"
            }
          }
        },
        "CreateCustomerRequest": {
          "type": "object",
          "required": [
            "companyName",
            "document",
            "documentType",
            "type",
            "contactName",
            "contactEmail"
          ],
          "properties": {
            "companyName": {
              "type": "string",
              "example": "Empresa de Cosméticos"
            },
            "fantasyName": {
              "type": "string",
              "example": "Empresa Cosméticos"
            },
            "document": {
              "type": "string",
              "example": "12345678000190"
            },
            "documentType": {
              "type": "string",
              "enum": ["cnpj", "cpf"],
              "example": "cnpj"
            },
            "type": {
              "type": "string",
              "enum": ["brand", "dealer", "hybrid"],
              "example": "brand"
            },
            "contactName": {
              "type": "string",
              "example": "João Silva"
            },
            "contactEmail": {
              "type": "string",
              "format": "email",
              "example": "joao.silva@empresa.com.br"
            },
            "contactPhone": {
              "type": "string",
              "example": "11999999999"
            },
            "status": {
              "type": "string",
              "enum": ["active", "inactive", "pending"],
              "example": "active"
            },
            "icon": {
              "type": "string",
              "format": "uri",
              "example": "https://storage.googleapis.com/byefive-public/customers/empresa.png"
            },
            "logo": {
              "type": "string",
              "format": "uri",
              "example": "https://storage.googleapis.com/byefive-public/customers/empresa-logo.png"
            },
            "sectors": {
              "type": "array",
              "items": {
                "type": "string",
                "example": "cosméticos"
              }
            },
            "kindOf": {
              "type": "string",
              "enum": ["brand", "network", "distributer"],
              "example": "brand"
            },
            "address": {
              "$ref": "#/components/schemas/AddressRequest"
            },
            "brandId": {
              "type": "string",
              "description": "ID da marca (apenas para tipo 'dealer')",
              "example": "cust_01HWXCP0R703NBJT9HENA2FPD3"
            }
          }
        },
        "UpdateCustomerRequest": {
          "type": "object",
          "properties": {
            "companyName": {
              "type": "string",
              "example": "Empresa de Cosméticos"
            },
            "fantasyName": {
              "type": "string",
              "example": "Empresa Cosméticos"
            },
            "document": {
              "type": "string",
              "example": "12345678000190"
            },
            "documentType": {
              "type": "string",
              "enum": ["cnpj", "cpf"],
              "example": "cnpj"
            },
            "contactName": {
              "type": "string",
              "example": "João Silva"
            },
            "contactEmail": {
              "type": "string",
              "format": "email",
              "example": "joao.silva@empresa.com.br"
            },
            "contactPhone": {
              "type": "string",
              "example": "11999999999"
            },
            "icon": {
              "type": "string",
              "format": "uri",
              "example": "https://storage.googleapis.com/byefive-public/customers/empresa.png"
            },
            "logo": {
              "type": "string",
              "format": "uri",
              "example": "https://storage.googleapis.com/byefive-public/customers/empresa-logo.png"
            },
            "sectors": {
              "type": "array",
              "items": {
                "type": "string",
                "example": "cosméticos"
              }
            },
            "kindOf": {
              "type": "string",
              "enum": ["brand", "network", "distributer"],
              "example": "brand"
            },
            "address": {
              "$ref": "#/components/schemas/AddressRequest"
            },
            "brandId": {
              "type": "string",
              "description": "ID da marca (apenas para tipo 'dealer')",
              "example": "cust_01HWXCP0R703NBJT9HENA2FPD3"
            }
          }
        },
        "UpdateCustomerStatusRequest": {
          "type": "object",
          "required": ["status"],
          "properties": {
            "status": {
              "type": "string",
              "enum": ["active", "inactive", "pending"],
              "example": "inactive"
            }
          }
        },
        "CustomerFlagsRuleResponse": {
          "type": "object",
          "properties": {
            "flagId": {
              "type": "string",
              "example": "flg_01J03Q0NMWD1A848NBW464045G"
            },
            "customerId": {
              "type": "string",
              "example": "cust_01J4J2ZGBCZZTN6EHR6T52FHS3"
            },
            "rule": {
              "type": "string",
              "example": "modulesByefivePay"
            },
            "name": {
              "type": "string",
              "example": "ByeFive Pay"
            },
            "value": {
              "type": "boolean",
              "example": true
            }
          }
        },
        "ProductCategoryListResponse": {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ProductCategoryResponse"
              }
            },
            "pagination": {
              "$ref": "#/components/schemas/Pagination"
            }
          }
        },
        "ProductCategoryResponse": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "example": "prc_01JNHFDTE8CSCC56QK8QBVEDRE"
            },
            "name": {
              "type": "string",
              "example": "Shampoos"
            },
            "description": {
              "type": "string",
              "example": "Produtos para limpeza do cabelo"
            },
            "icon": {
              "type": "string",
              "format": "uri",
              "example": "https://storage.googleapis.com/byefive-public/products/categories/shampoo.png"
            },
            "customerId": {
              "type": "string",
              "example": "cust_01J1TSMZSMQAE9GX61HV7F6QRF"
            },
            "groupId": {
              "type": "string",
              "example": "pcg_01J1BEJ7QG1WFMJPQZWND7C4YX"
            },
            "createdAt": {
              "type": "string",
              "format": "date-time"
            },
            "updatedAt": {
              "type": "string",
              "format": "date-time"
            },
            "group": {
              "$ref": "#/components/schemas/CategoryGroupBriefResponse"
            }
          }
        },
        "CreateProductCategoryRequest": {
          "type": "object",
          "required": ["name", "customerId"],
          "properties": {
            "name": {
              "type": "string",
              "example": "Shampoos"
            },
            "description": {
              "type": "string",
              "example": "Produtos para limpeza do cabelo"
            },
            "icon": {
              "type": "string",
              "format": "uri",
              "example": "https://storage.googleapis.com/byefive-public/products/categories/shampoo.png"
            },
            "customerId": {
              "type": "string",
              "example": "cust_01J1TSMZSMQAE9GX61HV7F6QRF"
            },
            "groupId": {
              "type": "string",
              "example": "pcg_01J1BEJ7QG1WFMJPQZWND7C4YX"
            }
          }
        },
        "UpdateProductCategoryRequest": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "example": "Shampoos Premium"
            },
            "description": {
              "type": "string",
              "example": "Produtos premium para limpeza do cabelo"
            },
            "icon": {
              "type": "string",
              "format": "uri",
              "example": "https://storage.googleapis.com/byefive-public/products/categories/shampoo-premium.png"
            },
            "groupId": {
              "type": "string",
              "example": "pcg_01J1BEJ7QG1WFMJPQZWND7C4YX"
            }
          }
        },
        "CategoryGroupListResponse": {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/CategoryGroupResponse"
              }
            },
            "pagination": {
              "$ref": "#/components/schemas/Pagination"
            }
          }
        },
        "CategoryGroupResponse": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "example": "pcg_01J1BEJ7QG1WFMJPQZWND7C4YX"
            },
            "name": {
              "type": "string",
              "example": "Produtos para Cabelo"
            },
            "description": {
              "type": "string",
              "example": "Categorias relacionadas a produtos capilares"
            },
            "customerId": {
              "type": "string",
              "example": "cust_01J1TSMZSMQAE9GX61HV7F6QRF"
            },
            "createdAt": {
              "type": "string",
              "format": "date-time"
            },
            "updatedAt": {
              "type": "string",
              "format": "date-time"
            }
          }
        },
        "CategoryGroupBriefResponse": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "example": "pcg_01J1BEJ7QG1WFMJPQZWND7C4YX"
            },
            "name": {
              "type": "string",
              "example": "Produtos para Cabelo"
            },
            "customerId": {
              "type": "string",
              "example": "cust_01J1TSMZSMQAE9GX61HV7F6QRF"
            }
          }
        },
        "CreateCategoryGroupRequest": {
          "type": "object",
          "required": ["name", "customerId"],
          "properties": {
            "name": {
              "type": "string",
              "example": "Produtos para Cabelo"
            },
            "description": {
              "type": "string",
              "example": "Categorias relacionadas a produtos capilares"
            },
            "customerId": {
              "type": "string",
              "example": "cust_01J1TSMZSMQAE9GX61HV7F6QRF"
            }
          }
        },
        "UpdateCategoryGroupRequest": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "example": "Produtos para Cabelo Premium"
            },
            "description": {
              "type": "string",
              "example": "Categorias relacionadas a produtos capilares premium"
            }
          }
        },
        "DocumentResponse": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "example": "termos-de-uso-etiquetadores"
            },
            "title": {
              "type": "string",
              "example": "Termos de Uso - Etiquetadores"
            },
            "content": {
              "type": "string",
              "example": "# Termos de Uso\n\nEstes são os termos de uso para etiquetadores da plataforma ByeFive.\n\n## 1. Aceitação dos Termos\n\nAo utilizar a plataforma, você concorda com estes termos."
            },
            "version": {
              "type": "string",
              "example": "1.0.0"
            },
            "createdAt": {
              "type": "string",
              "format": "date-time"
            },
            "updatedAt": {
              "type": "string",
              "format": "date-time"
            }
          }
        },
        "CreateDocumentRequest": {
          "type": "object",
          "required": ["key", "title", "content"],
          "properties": {
            "key": {
              "type": "string",
              "example": "termos-de-uso-etiquetadores"
            },
            "title": {
              "type": "string",
              "example": "Termos de Uso - Etiquetadores"
            },
            "content": {
              "type": "string",
              "example": "# Termos de Uso\n\nEstes são os termos de uso para etiquetadores da plataforma ByeFive.\n\n## 1. Aceitação dos Termos\n\nAo utilizar a plataforma, você concorda com estes termos."
            },
            "version": {
              "type": "string",
              "example": "1.0.0"
            }
          }
        },
        "UpdateDocumentRequest": {
          "type": "object",
          "required": ["content"],
          "properties": {
            "title": {
              "type": "string",
              "example": "Termos de Uso - Etiquetadores v2"
            },
            "content": {
              "type": "string",
              "example": "# Termos de Uso\n\nEstes são os termos de uso atualizados para etiquetadores da plataforma ByeFive.\n\n## 1. Aceitação dos Termos\n\nAo utilizar a plataforma, você concorda com estes termos."
            },
            "version": {
              "type": "string",
              "example": "1.0.1"
            }
          }
        },
        "FlagListResponse": {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/FlagResponse"
              }
            },
            "pagination": {
              "$ref": "#/components/schemas/Pagination"
            }
          }
        },
        "FlagResponse": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "example": "flg_01J03Q0NMWD1A848NBW464045G"
            },
            "name": {
              "type": "string",
              "example": "ByeFive Pay"
            },
            "description": {
              "type": "string",
              "example": "Módulo de pagamentos ByeFive Pay"
            },
            "rule": {
              "type": "string",
              "example": "modulesByefivePay"
            },
            "value": {
              "type": "boolean",
              "example": true
            },
            "createdAt": {
              "type": "string",
              "format": "date-time"
            },
            "updatedAt": {
              "type": "string",
              "format": "date-time"
            }
          }
        },
        "CreateFlagRequest": {
          "type": "object",
          "required": ["name", "rule", "value"],
          "properties": {
            "name": {
              "type": "string",
              "example": "ByeFive Pay"
            },
            "description": {
              "type": "string",
              "example": "Módulo de pagamentos ByeFive Pay"
            },
            "rule": {
              "type": "string",
              "example": "modulesByefivePay"
            },
            "value": {
              "type": "boolean",
              "example": true
            }
          }
        },
        "UpdateFlagRequest": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "example": "ByeFive Pay Plus"
            },
            "description": {
              "type": "string",
              "example": "Módulo avançado de pagamentos ByeFive Pay"
            },
            "value": {
              "type": "boolean",
              "example": false
            }
          }
        },
        "FunctionalityListResponse": {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/FunctionalityResponse"
              }
            },
            "pagination": {
              "$ref": "#/components/schemas/Pagination"
            }
          }
        },
        "FunctionalityResponse": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "example": "fnc_01HV2GXB6NH738XKZ73GJQGN40"
            },
            "name": {
              "type": "string",
              "example": "Gerenciamento de Produtos"
            },
            "description": {
              "type": "string",
              "example": "Funcionalidade para gerenciar produtos"
            },
            "module": {
              "type": "boolean",
              "example": true
            },
            "monthlyPayment": {
              "type": "boolean",
              "example": true
            },
            "access": {
              "type": "string",
              "enum": ["free", "paid"],
              "example": "paid"
            },
            "status": {
              "type": "string",
              "enum": ["active", "inactive", "notInUse"],
              "example": "active"
            },
            "createdAt": {
              "type": "string",
              "format": "date-time"
            },
            "updatedAt": {
              "type": "string",
              "format": "date-time"
            }
          }
        },
        "ModuleResponse": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "example": "fnc_01HV2GXB6NH738XKZ73GJQGN40"
            },
            "name": {
              "type": "string",
              "example": "Gerenciamento de Produtos"
            },
            "status": {
              "type": "string",
              "enum": ["active", "inactive", "notInUse"],
              "example": "active"
            },
            "enabled": {
              "type": "boolean",
              "example": true
            }
          }
        },
        "CreateFunctionalityRequest": {
          "type": "object",
          "required": ["name", "module", "status"],
          "properties": {
            "name": {
              "type": "string",
              "example": "Gerenciamento de Produtos"
            },
            "description": {
              "type": "string",
              "example": "Funcionalidade para gerenciar produtos"
            },
            "module": {
              "type": "boolean",
              "example": true
            },
            "monthlyPayment": {
              "type": "boolean",
              "example": true
            },
            "access": {
              "type": "string",
              "enum": ["free", "paid"],
              "example": "paid"
            },
            "status": {
              "type": "string",
              "enum": ["active", "inactive", "notInUse"],
              "example": "active"
            }
          }
        },
        "UpdateFunctionalityRequest": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "example": "Gerenciamento Avançado de Produtos"
            },
            "description": {
              "type": "string",
              "example": "Funcionalidade para gerenciar produtos com recursos avançados"
            },
            "module": {
              "type": "boolean",
              "example": true
            },
            "monthlyPayment": {
              "type": "boolean",
              "example": true
            },
            "access": {
              "type": "string",
              "enum": ["free", "paid"],
              "example": "paid"
            },
            "status": {
              "type": "string",
              "enum": ["active", "inactive", "notInUse"],
              "example": "active"
            }
          }
        },
        "InviteResponse": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "example": "inv_01JK9QSPB43JQ4B5JTZDYTG7E4"
            },
            "recipientName": {
              "type": "string",
              "example": "Maria Silva"
            },
            "recipientEmail": {
              "type": "string",
              "format": "email",
              "example": "maria.silva@example.com"
            },
            "recipientDocument": {
              "type": "string",
              "example": "12345678900"
            },
            "message": {
              "type": "string",
              "example": "Convite para participar da plataforma ByeFive."
            },
            "status": {
              "type": "string",
              "enum": ["pending", "accepted", "expired"],
              "example": "pending"
            },
            "expiresAt": {
              "type": "string",
              "format": "date-time"
            },
            "createdAt": {
              "type": "string",
              "format": "date-time"
            },
            "updatedAt": {
              "type": "string",
              "format": "date-time"
            }
          }
        },
        "SendInviteRequest": {
          "type": "object",
          "required": ["recipientName", "recipientEmail", "recipientDocument"],
          "properties": {
            "recipientName": {
              "type": "string",
              "example": "Maria Silva"
            },
            "recipientEmail": {
              "type": "string",
              "format": "email",
              "example": "maria.silva@example.com"
            },
            "recipientDocument": {
              "type": "string",
              "example": "12345678900"
            },
            "message": {
              "type": "string",
              "example": "Convite para participar da plataforma ByeFive."
            }
          }
        },
        "ResendInviteRequest": {
          "type": "object",
          "properties": {
            "message": {
              "type": "string",
              "example": "Reenvio do convite para participar da plataforma ByeFive."
            }
          }
        },
        "KvItemResponse": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "example": "9824303294098"
            },
            "value": {
              "type": "object",
              "additionalProperties": true,
              "example": {
                "name": "John Doe",
                "email": "john.doe@example.com",
                "preferences": {
                  "theme": "dark",
                  "notifications": true
                }
              }
            },
            "expiresAt": {
              "type": "string",
              "format": "date-time"
            },
            "createdAt": {
              "type": "string",
              "format": "date-time"
            },
            "updatedAt": {
              "type": "string",
              "format": "date-time"
            }
          }
        },
        "CreateKvItemRequest": {
          "type": "object",
          "required": ["id", "value"],
          "properties": {
            "id": {
              "type": "string",
              "example": "9824303294098"
            },
            "value": {
              "type": "object",
              "additionalProperties": true,
              "example": {
                "name": "John Doe",
                "email": "john.doe@example.com",
                "preferences": {
                  "theme": "dark",
                  "notifications": true
                }
              }
            },
            "expiresAt": {
              "type": "string",
              "format": "date-time"
            }
          }
        },
        "KvTempResponse": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "example": "34982039482039483"
            },
            "value": {
              "type": "object",
              "additionalProperties": true,
              "example": {
                "code": "123456",
                "userEmail": "user@example.com"
              }
            },
            "expiresAt": {
              "type": "string",
              "format": "date-time"
            },
            "createdAt": {
              "type": "string",
              "format": "date-time"
            }
          }
        },
        "CreateKvTempRequest": {
          "type": "object",
          "required": ["value"],
          "properties": {
            "value": {
              "type": "object",
              "additionalProperties": true,
              "example": {
                "code": "123456",
                "userEmail": "user@example.com"
              }
            },
            "expiresIn": {
              "type": "integer",
              "description": "Tempo de expiração em segundos",
              "example": 300
            }
          }
        },
        "NoteResponse": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "example": "note_01JJQ9CKP1GHEVYP0HY34QWC2F"
            },
            "ownerId": {
              "type": "string",
              "example": "prf_01JJQ9CKNSPGJZNSYDPGJ97KBS"
            },
            "content": {
              "type": "string",
              "example": "Este profissional atua principalmente em salões de luxo."
            },
            "createdAt": {
              "type": "string",
              "format": "date-time"
            },
            "updatedAt": {
              "type": "string",
              "format": "date-time"
            }
          }
        },
        "CreateNoteRequest": {
          "type": "object",
          "required": ["ownerId", "content"],
          "properties": {
            "ownerId": {
              "type": "string",
              "example": "prf_01JJQ9CKNSPGJZNSYDPGJ97KBS"
            },
            "content": {
              "type": "string",
              "example": "Este profissional atua principalmente em salões de luxo."
            }
          }
        },
        "UpdateNoteRequest": {
          "type": "object",
          "required": ["content"],
          "properties": {
            "content": {
              "type": "string",
              "example": "Este profissional atua principalmente em salões de luxo e tem preferência por produtos da linha XYZ."
            }
          }
        },
        "PdvNetworkListResponse": {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/PdvNetworkResponse"
              }
            },
            "pagination": {
              "$ref": "#/components/schemas/Pagination"
            }
          }
        },
        "PdvNetworkResponse": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "example": "pnt_01HWD6QTYEVTC3K6CB6GTP52J0"
            },
            "name": {
              "type": "string",
              "example": "Rede de Farmácias ABC"
            },
            "customerId": {
              "type": "string",
              "example": "cust_01J1TSMZSMQAE9GX61HV7F6QRF"
            },
            "description": {
              "type": "string",
              "example": "Rede de farmácias presente em todo o país"
            },
            "logo": {
              "type": "string",
              "format": "uri",
              "example": "https://storage.googleapis.com/byefive-public/networks/abc.png"
            },
            "createdAt": {
              "type": "string",
              "format": "date-time"
            },
            "updatedAt": {
              "type": "string",
              "format": "date-time"
            },
            "pdvsCount": {
              "type": "integer",
              "example": 150
            }
          }
        },
        "CreatePdvNetworkRequest": {
          "type": "object",
          "required": ["name", "customerId"],
          "properties": {
            "name": {
              "type": "string",
              "example": "Rede de Farmácias ABC"
            },
            "customerId": {
              "type": "string",
              "example": "cust_01J1TSMZSMQAE9GX61HV7F6QRF"
            },
            "description": {
              "type": "string",
              "example": "Rede de farmácias presente em todo o país"
            },
            "logo": {
              "type": "string",
              "format": "uri",
              "example": "https://storage.googleapis.com/byefive-public/networks/abc.png"
            }
          }
        },
        "UpdatePdvNetworkRequest": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "example": "Rede de Farmácias ABC Plus"
            },
            "description": {
              "type": "string",
              "example": "Maior rede de farmácias premium do Brasil"
            },
            "logo": {
              "type": "string",
              "format": "uri",
              "example": "https://storage.googleapis.com/byefive-public/networks/abc-plus.png"
            }
          }
        },
        "PdvListResponse": {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/PdvResponse"
              }
            },
            "pagination": {
              "$ref": "#/components/schemas/Pagination"
            }
          }
        },
        "PdvDetailResponse": {
          "allOf": [
            {
              "$ref": "#/components/schemas/PdvResponse"
            },
            {
              "type": "object",
              "properties": {
                "network": {
                  "$ref": "#/components/schemas/PdvNetworkResponse"
                },
                "customer": {
                  "$ref": "#/components/schemas/CustomerBriefResponse"
                }
              }
            }
          ]
        },
        "PdvBriefResponse": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "example": "pdv_01J6T5MA227QN594Z5D7SKCWBE"
            },
            "name": {
              "type": "string",
              "example": "Farmácia Saúde Total"
            },
            "status": {
              "type": "string",
              "enum": ["active", "inactive", "pending"],
              "example": "active"
            },
            "address": {
              "$ref": "#/components/schemas/AddressResponse"
            }
          }
        },
        "CreatePdvRequest": {
          "type": "object",
          "required": ["name", "document", "documentType", "customerId"],
          "properties": {
            "name": {
              "type": "string",
              "example": "Farmácia Saúde Total"
            },
            "document": {
              "type": "string",
              "example": "12345678000190"
            },
            "documentType": {
              "type": "string",
              "enum": ["cnpj", "cpf"],
              "example": "cnpj"
            },
            "networkId": {
              "type": "string",
              "example": "pnt_01HWD6QTYEVTC3K6CB6GTP52J0"
            },
            "customerId": {
              "type": "string",
              "example": "cust_01J1TSMZSMQAE9GX61HV7F6QRF"
            },
            "status": {
              "type": "string",
              "enum": ["active", "inactive", "pending"],
              "example": "active"
            },
            "address": {
              "$ref": "#/components/schemas/AddressRequest"
            }
          }
        },
        "UpdatePdvRequest": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "example": "Farmácia Saúde Total Plus"
            },
            "document": {
              "type": "string",
              "example": "12345678000190"
            },
            "documentType": {
              "type": "string",
              "enum": ["cnpj", "cpf"],
              "example": "cnpj"
            },
            "networkId": {
              "type": "string",
              "example": "pnt_01HWD6QTYEVTC3K6CB6GTP52J0"
            },
            "status": {
              "type": "string",
              "enum": ["active", "inactive", "pending"],
              "example": "active"
            },
            "address": {
              "$ref": "#/components/schemas/AddressRequest"
            }
          }
        },
        "PdvMobileQueryRequest": {
          "type": "object",
          "properties": {
            "latitude": {
              "type": "number",
              "format": "float",
              "example": -23.55052
            },
            "longitude": {
              "type": "number",
              "format": "float",
              "example": -46.633309
            },
            "maxDistance": {
              "type": "number",
              "format": "float",
              "description": "Distância máxima em quilômetros",
              "example": 5.0
            },
            "search": {
              "type": "string",
              "example": "farmácia"
            },
            "page": {
              "type": "integer",
              "minimum": 1,
              "example": 1
            },
            "size": {
              "type": "integer",
              "minimum": 1,
              "example": 10
            }
          }
        },
        "RequestedPdvListResponse": {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/RequestedPdvResponse"
              }
            },
            "pagination": {
              "$ref": "#/components/schemas/Pagination"
            }
          }
        },
        "RequestedPdvResponse": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "example": "prdv_01JJQ9CKP09HEVYP0HY34QWC2F"
            },
            "name": {
              "type": "string",
              "example": "Salão Beauty Hair"
            },
            "professionalId": {
              "type": "string",
              "example": "prf_01JJZRMFRY03PN3KVHHNJW8XZ7"
            },
            "professional": {
              "$ref": "#/components/schemas/ProfessionalBriefResponse"
            },
            "status": {
              "type": "string",
              "enum": ["pending", "approved", "rejected"],
              "example": "pending"
            },
            "address": {
              "$ref": "#/components/schemas/AddressResponse"
            },
            "createdAt": {
              "type": "string",
              "format": "date-time"
            },
            "updatedAt": {
              "type": "string",
              "format": "date-time"
            }
          }
        },
        "ProductListResponse": {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ProductResponse"
              }
            },
            "pagination": {
              "$ref": "#/components/schemas/Pagination"
            }
          }
        },
        "ProductResponse": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "example": "prd_01JP4VY5F8W9CDJM81M04ZHXKM"
            },
            "name": {
              "type": "string",
              "example": "Shampoo Revitalizante 300ml"
            },
            "description": {
              "type": "string",
              "example": "Shampoo revitalizante para cabelos danificados"
            },
            "price": {
              "type": "number",
              "format": "float",
              "example": 29.9
            },
            "points": {
              "type": "integer",
              "example": 30
            },
            "barcode": {
              "type": "string",
              "example": "9351064272782"
            },
            "images": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uri",
                "example": "https://storage.googleapis.com/byefive-public/products/shampoo.png"
              }
            },
            "status": {
              "type": "string",
              "enum": ["active", "inactive"],
              "example": "active"
            },
            "categoryId": {
              "type": "string",
              "example": "prc_01JNHFDTE8CSCC56QK8QBVEDRE"
            },
            "lineId": {
              "type": "string",
              "example": "lin_01JNHFGX6BGW5S4TKW4G0DKWM4"
            },
            "customerId": {
              "type": "string",
              "example": "cust_01J1TSMZSMQAE9GX61HV7F6QRF"
            },
            "createdAt": {
              "type": "string",
              "format": "date-time"
            },
            "updatedAt": {
              "type": "string",
              "format": "date-time"
            }
          }
        },
        "ProductDetailResponse": {
          "allOf": [
            {
              "$ref": "#/components/schemas/ProductResponse"
            },
            {
              "type": "object",
              "properties": {
                "category": {
                  "$ref": "#/components/schemas/ProductCategoryResponse"
                },
                "line": {
                  "$ref": "#/components/schemas/ProductLineResponse"
                }
              }
            }
          ]
        },
        "CreateProductRequest": {
          "type": "object",
          "required": ["name", "categoryId", "customerId"],
          "properties": {
            "name": {
              "type": "string",
              "example": "Shampoo Revitalizante 300ml"
            },
            "description": {
              "type": "string",
              "example": "Shampoo revitalizante para cabelos danificados"
            },
            "price": {
              "type": "number",
              "format": "float",
              "example": 29.9
            },
            "points": {
              "type": "integer",
              "example": 30
            },
            "barcode": {
              "type": "string",
              "example": "9351064272782"
            },
            "images": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uri",
                "example": "https://storage.googleapis.com/byefive-public/products/shampoo.png"
              }
            },
            "status": {
              "type": "string",
              "enum": ["active", "inactive"],
              "example": "active"
            },
            "categoryId": {
              "type": "string",
              "example": "prc_01JNHFDTE8CSCC56QK8QBVEDRE"
            },
            "lineId": {
              "type": "string",
              "example": "lin_01JNHFGX6BGW5S4TKW4G0DKWM4"
            },
            "customerId": {
              "type": "string",
              "example": "cust_01J1TSMZSMQAE9GX61HV7F6QRF"
            }
          }
        },
        "UpdateProductRequest": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "example": "Shampoo Revitalizante Premium 300ml"
            },
            "description": {
              "type": "string",
              "example": "Shampoo revitalizante premium para cabelos danificados"
            },
            "price": {
              "type": "number",
              "format": "float",
              "example": 39.9
            },
            "points": {
              "type": "integer",
              "example": 40
            },
            "barcode": {
              "type": "string",
              "example": "9351064272782"
            },
            "images": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uri",
                "example": "https://storage.googleapis.com/byefive-public/products/shampoo-premium.png"
              }
            },
            "status": {
              "type": "string",
              "enum": ["active", "inactive"],
              "example": "active"
            },
            "categoryId": {
              "type": "string",
              "example": "prc_01JNHFDTE8CSCC56QK8QBVEDRE"
            },
            "lineId": {
              "type": "string",
              "example": "lin_01JNHFGX6BGW5S4TKW4G0DKWM4"
            }
          }
        },
        "UpdateProductsStatusPointsRequest": {
          "type": "object",
          "required": ["products"],
          "properties": {
            "products": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "example": "prd_01JP4VY5F8W9CDJM81M04ZHXKM"
                  },
                  "status": {
                    "type": "string",
                    "enum": ["active", "inactive"],
                    "example": "inactive"
                  },
                  "points": {
                    "type": "integer",
                    "example": 50
                  }
                }
              }
            }
          }
        },
        "ProductLineListResponse": {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ProductLineResponse"
              }
            },
            "pagination": {
              "$ref": "#/components/schemas/Pagination"
            }
          }
        },
        "ProductLineResponse": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "example": "lin_01JNHFGX6BGW5S4TKW4G0DKWM4"
            },
            "name": {
              "type": "string",
              "example": "Linha Premium"
            },
            "description": {
              "type": "string",
              "example": "Linha de produtos premium para cabelos"
            },
            "icon": {
              "type": "string",
              "format": "uri",
              "example": "https://storage.googleapis.com/byefive-public/products/lines/premium.png"
            },
            "customerId": {
              "type": "string",
              "example": "cust_01J1TSMZSMQAE9GX61HV7F6QRF"
            },
            "createdAt": {
              "type": "string",
              "format": "date-time"
            },
            "updatedAt": {
              "type": "string",
              "format": "date-time"
            }
          }
        },
        "CreateProductLineRequest": {
          "type": "object",
          "required": ["name", "customerId"],
          "properties": {
            "name": {
              "type": "string",
              "example": "Linha Premium"
            },
            "description": {
              "type": "string",
              "example": "Linha de produtos premium para cabelos"
            },
            "icon": {
              "type": "string",
              "format": "uri",
              "example": "https://storage.googleapis.com/byefive-public/products/lines/premium.png"
            },
            "customerId": {
              "type": "string",
              "example": "cust_01J1TSMZSMQAE9GX61HV7F6QRF"
            }
          }
        },
        "UpdateProductLineRequest": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "example": "Linha Super Premium"
            },
            "description": {
              "type": "string",
              "example": "Linha de produtos super premium para cabelos"
            },
            "icon": {
              "type": "string",
              "format": "uri",
              "example": "https://storage.googleapis.com/byefive-public/products/lines/super-premium.png"
            }
          }
        },
        "ProfessionalListResponse": {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ProfessionalResponse"
              }
            },
            "pagination": {
              "$ref": "#/components/schemas/Pagination"
            }
          }
        },
        "ProfessionalResponse": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "example": "prf_01JJZRMFRY03PN3KVHHNJW8XZ7"
            },
            "name": {
              "type": "string",
              "example": "Carlos Oliveira"
            },
            "document": {
              "type": "string",
              "example": "12345678900"
            },
            "documentType": {
              "type": "string",
              "enum": ["cpf", "cnpj"],
              "example": "cpf"
            },
            "email": {
              "type": "string",
              "format": "email",
              "example": "carlos.oliveira@example.com"
            },
            "phone": {
              "type": "string",
              "example": "11999999999"
            },
            "profileImage": {
              "type": "string",
              "format": "uri",
              "example": "https://storage.googleapis.com/byefive-public/professionals/profile.png"
            },
            "profession": {
              "type": "string",
              "example": "Cabeleireiro"
            },
            "status": {
              "type": "string",
              "enum": ["active", "inactive", "pending"],
              "example": "active"
            },
            "connectionsCount": {
              "type": "integer",
              "example": 3
            },
            "createdAt": {
              "type": "string",
              "format": "date-time"
            },
            "updatedAt": {
              "type": "string",
              "format": "date-time"
            }
          }
        },
        "ProfessionalDetailResponse": {
          "allOf": [
            {
              "$ref": "#/components/schemas/ProfessionalResponse"
            },
            {
              "type": "object",
              "properties": {
                "address": {
                  "$ref": "#/components/schemas/AddressResponse"
                },
                "config": {
                  "$ref": "#/components/schemas/ProfessionalConfigResponse"
                },
                "connections": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConnectionResponse"
                  }
                }
              }
            }
          ]
        },
        "ProfessionalBriefResponse": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "example": "prf_01JJZRMFRY03PN3KVHHNJW8XZ7"
            },
            "name": {
              "type": "string",
              "example": "Carlos Oliveira"
            },
            "email": {
              "type": "string",
              "format": "email",
              "example": "carlos.oliveira@example.com"
            },
            "phone": {
              "type": "string",
              "example": "11999999999"
            },
            "profileImage": {
              "type": "string",
              "format": "uri",
              "example": "https://storage.googleapis.com/byefive-public/professionals/profile.png"
            },
            "profession": {
              "type": "string",
              "example": "Cabeleireiro"
            },
            "status": {
              "type": "string",
              "enum": ["active", "inactive", "pending"],
              "example": "active"
            }
          }
        },
        "ProfessionalConfigResponse": {
          "type": "object",
          "properties": {
            "isPrivate": {
              "type": "boolean",
              "example": false
            },
            "status": {
              "type": "string",
              "enum": ["available", "unavailable"],
              "example": "available"
            }
          }
        },
        "CreateProfessionalRequest": {
          "type": "object",
          "required": [
            "name",
            "document",
            "documentType",
            "email",
            "phone",
            "profession"
          ],
          "properties": {
            "name": {
              "type": "string",
              "example": "Carlos Oliveira"
            },
            "document": {
              "type": "string",
              "example": "12345678900"
            },
            "documentType": {
              "type": "string",
              "enum": ["cpf", "cnpj"],
              "example": "cpf"
            },
            "email": {
              "type": "string",
              "format": "email",
              "example": "carlos.oliveira@example.com"
            },
            "phone": {
              "type": "string",
              "example": "11999999999"
            },
            "profileImage": {
              "type": "string",
              "format": "uri",
              "example": "https://storage.googleapis.com/byefive-public/professionals/profile.png"
            },
            "profession": {
              "type": "string",
              "example": "Cabeleireiro"
            },
            "status": {
              "type": "string",
              "enum": ["active", "inactive", "pending"],
              "example": "active"
            },
            "address": {
              "$ref": "#/components/schemas/AddressRequest"
            },
            "config": {
              "type": "object",
              "properties": {
                "isPrivate": {
                  "type": "boolean",
                  "example": false
                },
                "status": {
                  "type": "string",
                  "enum": ["available", "unavailable"],
                  "example": "available"
                }
              }
            }
          }
        },
        "UpdateProfessionalRequest": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "example": "Carlos Roberto Oliveira"
            },
            "document": {
              "type": "string",
              "example": "12345678900"
            },
            "documentType": {
              "type": "string",
              "enum": ["cpf", "cnpj"],
              "example": "cpf"
            },
            "email": {
              "type": "string",
              "format": "email",
              "example": "carlos.roberto@example.com"
            },
            "phone": {
              "type": "string",
              "example": "11988888888"
            },
            "profileImage": {
              "type": "string",
              "format": "uri",
              "example": "https://storage.googleapis.com/byefive-public/professionals/profile-updated.png"
            },
            "profession": {
              "type": "string",
              "example": "Cabeleireiro Especialista"
            },
            "status": {
              "type": "string",
              "enum": ["active", "inactive", "pending"],
              "example": "active"
            },
            "address": {
              "$ref": "#/components/schemas/AddressRequest"
            }
          }
        },
        "UpdateProfessionalConfigPrivateRequest": {
          "type": "object",
          "required": ["isPrivate"],
          "properties": {
            "isPrivate": {
              "type": "boolean",
              "example": true
            }
          }
        },
        "UpdateProfessionalConfigStatusRequest": {
          "type": "object",
          "required": ["status"],
          "properties": {
            "status": {
              "type": "string",
              "enum": ["available", "unavailable"],
              "example": "unavailable"
            }
          }
        },
        "CreateUpdateNoteRequest": {
          "type": "object",
          "required": ["ownerId", "content"],
          "properties": {
            "ownerId": {
              "type": "string",
              "example": "prf_01JJQ9CKNSPGJZNSYDPGJ97KBS"
            },
            "content": {
              "type": "string",
              "example": "Este profissional atua principalmente em salões de luxo."
            }
          }
        },
        "ConnectionResponse": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "example": "conn_01J8BCPXS5YZAGM91PWYWKJTMS"
            },
            "professionalId": {
              "type": "string",
              "example": "prf_01JJZRMFRY03PN3KVHHNJW8XZ7"
            },
            "customerId": {
              "type": "string",
              "example": "cust_01J4J2ZGBCZZTN6EHR6T52FHS3"
            },
            "status": {
              "type": "string",
              "enum": ["active", "inactive", "pending"],
              "example": "active"
            },
            "createdAt": {
              "type": "string",
              "format": "date-time"
            },
            "updatedAt": {
              "type": "string",
              "format": "date-time"
            },
            "customer": {
              "$ref": "#/components/schemas/CustomerBriefResponse"
            }
          }
        },
        "ConnectionAlertResponse": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "example": "cnal_01JM5JRG5GMCQYBTM9FDKX8QR4"
            },
            "professional": {
              "$ref": "#/components/schemas/ProfessionalBriefResponse"
            },
            "createdAt": {
              "type": "string",
              "format": "date-time"
            }
          }
        },
        "CreateConnectionRequest": {
          "type": "object",
          "required": ["customerId"],
          "properties": {
            "customerId": {
              "type": "string",
              "example": "cust_01J4J2ZGBCZZTN6EHR6T52FHS3"
            },
            "status": {
              "type": "string",
              "enum": ["active", "inactive", "pending"],
              "example": "active"
            }
          }
        },
        "UpdateConnectionRequest": {
          "type": "object",
          "required": ["status"],
          "properties": {
            "status": {
              "type": "string",
              "enum": ["active", "inactive", "pending"],
              "example": "active"
            }
          }
        },
        "RoleListResponse": {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/RoleResponse"
              }
            },
            "pagination": {
              "$ref": "#/components/schemas/Pagination"
            }
          }
        },
        "RoleResponse": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "example": "rol_01JK9Q0P4K1BT5JSK66RSC5HK9"
            },
            "name": {
              "type": "string",
              "example": "Administrador"
            },
            "description": {
              "type": "string",
              "example": "Acesso completo ao sistema"
            },
            "isMaster": {
              "type": "boolean",
              "example": true
            },
            "type": {
              "type": "string",
              "enum": ["brand", "dealer", "hybrid", "system"],
              "example": "brand"
            },
            "customerId": {
              "type": "string",
              "example": "cust_01J4J2ZGBCZZTN6EHR6T52FHS3"
            },
            "permissions": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/PermissionResponse"
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time"
            },
            "updatedAt": {
              "type": "string",
              "format": "date-time"
            }
          }
        },
        "PermissionResponse": {
          "type": "object",
          "properties": {
            "resource": {
              "type": "string",
              "example": "products"
            },
            "action": {
              "type": "string",
              "example": "create"
            }
          }
        },
        "CreateBrandRoleRequest": {
          "type": "object",
          "required": ["name", "customerId", "permissions"],
          "properties": {
            "name": {
              "type": "string",
              "example": "Gerente de Produtos"
            },
            "description": {
              "type": "string",
              "example": "Acesso para gerenciamento de produtos"
            },
            "isMaster": {
              "type": "boolean",
              "example": false
            },
            "customerId": {
              "type": "string",
              "example": "cust_01J4J2ZGBCZZTN6EHR6T52FHS3"
            },
            "permissions": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "resource": {
                    "type": "string",
                    "example": "products"
                  },
                  "action": {
                    "type": "string",
                    "example": "create"
                  }
                }
              }
            }
          }
        },
        "UpdateBrandRoleRequest": {
          "type": "object",
          "required": ["id", "permissions"],
          "properties": {
            "id": {
              "type": "string",
              "example": "rol_01JK9Q0P4K1BT5JSK66RSC5HK9"
            },
            "name": {
              "type": "string",
              "example": "Gerente Senior de Produtos"
            },
            "description": {
              "type": "string",
              "example": "Acesso avançado para gerenciamento de produtos"
            },
            "permissions": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "resource": {
                    "type": "string",
                    "example": "products"
                  },
                  "action": {
                    "type": "string",
                    "example": "create"
                  }
                }
              }
            }
          }
        },
        "CreateDealerRoleRequest": {
          "type": "object",
          "required": ["name", "customerId", "permissions"],
          "properties": {
            "name": {
              "type": "string",
              "example": "Gerente de PDV"
            },
            "description": {
              "type": "string",
              "example": "Acesso para gerenciamento de PDVs"
            },
            "isMaster": {
              "type": "boolean",
              "example": false
            },
            "customerId": {
              "type": "string",
              "example": "cust_01J4J2ZGBCZZTN6EHR6T52FHS3"
            },
            "permissions": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "resource": {
                    "type": "string",
                    "example": "pdvs"
                  },
                  "action": {
                    "type": "string",
                    "example": "create"
                  }
                }
              }
            }
          }
        },
        "UpdateDealerRoleRequest": {
          "type": "object",
          "required": ["id", "permissions"],
          "properties": {
            "id": {
              "type": "string",
              "example": "rol_01JK9Q0P4K1BT5JSK66RSC5HK9"
            },
            "name": {
              "type": "string",
              "example": "Gerente Senior de PDV"
            },
            "description": {
              "type": "string",
              "example": "Acesso avançado para gerenciamento de PDVs"
            },
            "permissions": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "resource": {
                    "type": "string",
                    "example": "pdvs"
                  },
                  "action": {
                    "type": "string",
                    "example": "create"
                  }
                }
              }
            }
          }
        },
        "CreateHybridRoleRequest": {
          "type": "object",
          "required": ["name", "customerId", "permissions"],
          "properties": {
            "name": {
              "type": "string",
              "example": "Gerente Híbrido"
            },
            "description": {
              "type": "string",
              "example": "Acesso para gerenciamento de produtos e PDVs"
            },
            "isMaster": {
              "type": "boolean",
              "example": false
            },
            "customerId": {
              "type": "string",
              "example": "cust_01J4J2ZGBCZZTN6EHR6T52FHS3"
            },
            "permissions": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "resource": {
                    "type": "string",
                    "example": "products"
                  },
                  "action": {
                    "type": "string",
                    "example": "create"
                  }
                }
              }
            }
          }
        },
        "UpdateHybridRoleRequest": {
          "type": "object",
          "required": ["id", "permissions"],
          "properties": {
            "id": {
              "type": "string",
              "example": "rol_01JK9Q0P4K1BT5JSK66RSC5HK9"
            },
            "name": {
              "type": "string",
              "example": "Gerente Senior Híbrido"
            },
            "description": {
              "type": "string",
              "example": "Acesso avançado para gerenciamento de produtos e PDVs"
            },
            "permissions": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "resource": {
                    "type": "string",
                    "example": "products"
                  },
                  "action": {
                    "type": "string",
                    "example": "create"
                  }
                }
              }
            }
          }
        },
        "SubscriptionListResponse": {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/SubscriptionResponse"
              }
            },
            "pagination": {
              "$ref": "#/components/schemas/Pagination"
            }
          }
        },
        "SubscriptionResponse": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "example": "sub_01JK9Q0P5NX98PK1J3QETAQ6Y4"
            },
            "name": {
              "type": "string",
              "example": "Plano Profissional"
            },
            "description": {
              "type": "string",
              "example": "Acesso completo a todas as funcionalidades do sistema"
            },
            "price": {
              "type": "number",
              "format": "float",
              "example": 99.9
            },
            "currency": {
              "type": "string",
              "enum": ["BRL", "USD", "EUR"],
              "example": "BRL"
            },
            "interval": {
              "type": "string",
              "enum": ["monthly", "yearly"],
              "example": "monthly"
            },
            "status": {
              "type": "string",
              "enum": ["active", "inactive"],
              "example": "active"
            },
            "features": {
              "type": "array",
              "items": {
                "type": "string",
                "example": "Acesso a relatórios avançados"
              }
            },
            "order": {
              "type": "integer",
              "example": 2
            },
            "highlight": {
              "type": "boolean",
              "example": true
            },
            "createdAt": {
              "type": "string",
              "format": "date-time"
            },
            "updatedAt": {
              "type": "string",
              "format": "date-time"
            }
          }
        },
        "SubscriptionDetailResponse": {
          "allOf": [
            {
              "$ref": "#/components/schemas/SubscriptionResponse"
            },
            {
              "type": "object",
              "properties": {
                "modules": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ModuleResponse"
                  }
                },
                "customers": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerBriefResponse"
                  }
                }
              }
            }
          ]
        },
        "SubscriptionBriefResponse": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "example": "sub_01JK9Q0P5NX98PK1J3QETAQ6Y4"
            },
            "name": {
              "type": "string",
              "example": "Plano Profissional"
            },
            "price": {
              "type": "number",
              "format": "float",
              "example": 99.9
            },
            "currency": {
              "type": "string",
              "enum": ["BRL", "USD", "EUR"],
              "example": "BRL"
            },
            "interval": {
              "type": "string",
              "enum": ["monthly", "yearly"],
              "example": "monthly"
            }
          }
        },
        "SubscriptionSiteListResponse": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "example": "sub_01JK9Q0P5NX98PK1J3QETAQ6Y4"
              },
              "name": {
                "type": "string",
                "example": "Plano Profissional"
              },
              "description": {
                "type": "string",
                "example": "Acesso completo a todas as funcionalidades do sistema"
              },
              "price": {
                "type": "number",
                "format": "float",
                "example": 99.9
              },
              "currency": {
                "type": "string",
                "enum": ["BRL", "USD", "EUR"],
                "example": "BRL"
              },
              "interval": {
                "type": "string",
                "enum": ["monthly", "yearly"],
                "example": "monthly"
              },
              "features": {
                "type": "array",
                "items": {
                  "type": "string",
                  "example": "Acesso a relatórios avançados"
                }
              },
              "order": {
                "type": "integer",
                "example": 2
              },
              "highlight": {
                "type": "boolean",
                "example": true
              }
            }
          }
        },
        "CreateSubscriptionRequest": {
          "type": "object",
          "required": ["name", "price", "currency", "interval", "status"],
          "properties": {
            "name": {
              "type": "string",
              "example": "Plano Profissional"
            },
            "description": {
              "type": "string",
              "example": "Acesso completo a todas as funcionalidades do sistema"
            },
            "price": {
              "type": "number",
              "format": "float",
              "example": 99.9
            },
            "currency": {
              "type": "string",
              "enum": ["BRL", "USD", "EUR"],
              "example": "BRL"
            },
            "interval": {
              "type": "string",
              "enum": ["monthly", "yearly"],
              "example": "monthly"
            },
            "status": {
              "type": "string",
              "enum": ["active", "inactive"],
              "example": "active"
            },
            "features": {
              "type": "array",
              "items": {
                "type": "string",
                "example": "Acesso a relatórios avançados"
              }
            },
            "order": {
              "type": "integer",
              "example": 2
            },
            "highlight": {
              "type": "boolean",
              "example": true
            },
            "modulesIds": {
              "type": "array",
              "items": {
                "type": "string",
                "example": "fnc_01HV2GXB6NH738XKZ73GJQGN40"
              }
            }
          }
        },
        "UpdateSubscriptionRequest": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "example": "Plano Profissional Plus"
            },
            "description": {
              "type": "string",
              "example": "Acesso completo a todas as funcionalidades avançadas do sistema"
            },
            "price": {
              "type": "number",
              "format": "float",
              "example": 129.9
            },
            "currency": {
              "type": "string",
              "enum": ["BRL", "USD", "EUR"],
              "example": "BRL"
            },
            "interval": {
              "type": "string",
              "enum": ["monthly", "yearly"],
              "example": "monthly"
            },
            "status": {
              "type": "string",
              "enum": ["active", "inactive"],
              "example": "active"
            },
            "features": {
              "type": "array",
              "items": {
                "type": "string",
                "example": "Acesso a relatórios avançados e personalizados"
              }
            },
            "order": {
              "type": "integer",
              "example": 1
            },
            "highlight": {
              "type": "boolean",
              "example": true
            },
            "modulesIds": {
              "type": "array",
              "items": {
                "type": "string",
                "example": "fnc_01HV2GXB6NH738XKZ73GJQGN40"
              }
            }
          }
        },
        "UserListResponse": {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/UserResponse"
              }
            },
            "pagination": {
              "$ref": "#/components/schemas/Pagination"
            }
          }
        },
        "UserResponse": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "example": "usr_01J4J62RCMS5DTFYNTD2NCHZE0"
            },
            "name": {
              "type": "string",
              "example": "João Silva"
            },
            "email": {
              "type": "string",
              "format": "email",
              "example": "joao.silva@example.com"
            },
            "cpf": {
              "type": "string",
              "example": "12345678900"
            },
            "phone": {
              "type": "string",
              "example": "11999999999"
            },
            "profileImage": {
              "type": "string",
              "format": "uri",
              "example": "https://storage.googleapis.com/byefive-public/users/profile.png"
            },
            "type": {
              "type": "string",
              "enum": ["dashboard", "labeler"],
              "example": "dashboard"
            },
            "status": {
              "type": "string",
              "enum": ["active", "inactive"],
              "example": "active"
            },
            "roleId": {
              "type": "string",
              "example": "rol_01JK9Q0P4K1BT5JSK66RSC5HK9"
            },
            "customerId": {
              "type": "string",
              "example": "cust_01J4J2ZGBCZZTN6EHR6T52FHS3"
            },
            "createdAt": {
              "type": "string",
              "format": "date-time"
            },
            "updatedAt": {
              "type": "string",
              "format": "date-time"
            }
          }
        },
        "UserDetailResponse": {
          "allOf": [
            {
              "$ref": "#/components/schemas/UserResponse"
            },
            {
              "type": "object",
              "properties": {
                "role": {
                  "$ref": "#/components/schemas/RoleResponse"
                },
                "customer": {
                  "$ref": "#/components/schemas/CustomerBriefResponse"
                },
                "termsAccepted": {
                  "type": "boolean",
                  "example": true
                }
              }
            }
          ]
        },
        "LabelerListResponse": {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/LabelerResponse"
              }
            },
            "pagination": {
              "$ref": "#/components/schemas/Pagination"
            }
          }
        },
        "LabelerResponse": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "example": "usr_01J4J62RCMS5DTFYNTD2NCHZE0"
            },
            "name": {
              "type": "string",
              "example": "Maria Oliveira"
            },
            "cpf": {
              "type": "string",
              "example": "12345678900"
            },
            "phone": {
              "type": "string",
              "example": "11999999999"
            },
            "status": {
              "type": "string",
              "enum": ["active", "inactive"],
              "example": "active"
            },
            "customerId": {
              "type": "string",
              "example": "cust_01J4J2ZGBCZZTN6EHR6T52FHS3"
            },
            "customer": {
              "$ref": "#/components/schemas/CustomerBriefResponse"
            }
          }
        },
        "CreateLabelerRequest": {
          "type": "object",
          "required": ["name", "cpf", "phone", "password", "customerId"],
          "properties": {
            "name": {
              "type": "string",
              "example": "Maria Oliveira"
            },
            "cpf": {
              "type": "string",
              "example": "12345678900"
            },
            "phone": {
              "type": "string",
              "example": "11999999999"
            },
            "password": {
              "type": "string",
              "format": "password",
              "example": "Senha@123"
            },
            "status": {
              "type": "string",
              "enum": ["active", "inactive"],
              "example": "active"
            },
            "customerId": {
              "type": "string",
              "example": "cust_01J4J2ZGBCZZTN6EHR6T52FHS3"
            }
          }
        },
        "UpdateLabelerRequest": {
          "type": "object",
          "required": ["id"],
          "properties": {
            "id": {
              "type": "string",
              "example": "usr_01J4J62RCMS5DTFYNTD2NCHZE0"
            },
            "name": {
              "type": "string",
              "example": "Maria Oliveira Silva"
            },
            "cpf": {
              "type": "string",
              "example": "12345678900"
            },
            "phone": {
              "type": "string",
              "example": "11988888888"
            },
            "password": {
              "type": "string",
              "format": "password",
              "example": "NovaSenha@123"
            },
            "status": {
              "type": "string",
              "enum": ["active", "inactive"],
              "example": "active"
            }
          }
        },
        "CreateBrandLabelerRequest": {
          "type": "object",
          "required": ["name", "cpf", "phone", "password", "customerId"],
          "properties": {
            "name": {
              "type": "string",
              "example": "Maria Oliveira"
            },
            "cpf": {
              "type": "string",
              "example": "12345678900"
            },
            "phone": {
              "type": "string",
              "example": "11999999999"
            },
            "password": {
              "type": "string",
              "format": "password",
              "example": "Senha@123"
            },
            "status": {
              "type": "string",
              "enum": ["active", "inactive"],
              "example": "active"
            },
            "customerId": {
              "type": "string",
              "example": "cust_01J4J2ZGBCZZTN6EHR6T52FHS3"
            }
          }
        },
        "CreateDealerLabelerRequest": {
          "type": "object",
          "required": ["name", "cpf", "phone", "password", "customerId"],
          "properties": {
            "name": {
              "type": "string",
              "example": "Maria Oliveira"
            },
            "cpf": {
              "type": "string",
              "example": "12345678900"
            },
            "phone": {
              "type": "string",
              "example": "11999999999"
            },
            "password": {
              "type": "string",
              "format": "password",
              "example": "Senha@123"
            },
            "status": {
              "type": "string",
              "enum": ["active", "inactive"],
              "example": "active"
            },
            "customerId": {
              "type": "string",
              "example": "cust_01J4J2ZGBCZZTN6EHR6T52FHS3"
            }
          }
        },
        "CreateHybridLabelerRequest": {
          "type": "object",
          "required": ["name", "cpf", "phone", "password", "customerId"],
          "properties": {
            "name": {
              "type": "string",
              "example": "Maria Oliveira"
            },
            "cpf": {
              "type": "string",
              "example": "12345678900"
            },
            "phone": {
              "type": "string",
              "example": "11999999999"
            },
            "password": {
              "type": "string",
              "format": "password",
              "example": "Senha@123"
            },
            "status": {
              "type": "string",
              "enum": ["active", "inactive"],
              "example": "active"
            },
            "customerId": {
              "type": "string",
              "example": "cust_01J4J2ZGBCZZTN6EHR6T52FHS3"
            }
          }
        },
        "CreateDashboardUserRequest": {
          "type": "object",
          "required": [
            "name",
            "email",
            "cpf",
            "phone",
            "password",
            "roleId",
            "customerId"
          ],
          "properties": {
            "name": {
              "type": "string",
              "example": "João Silva"
            },
            "email": {
              "type": "string",
              "format": "email",
              "example": "joao.silva@example.com"
            },
            "cpf": {
              "type": "string",
              "example": "12345678900"
            },
            "phone": {
              "type": "string",
              "example": "11999999999"
            },
            "profileImage": {
              "type": "string",
              "format": "uri",
              "example": "https://storage.googleapis.com/byefive-public/users/profile.png"
            },
            "password": {
              "type": "string",
              "format": "password",
              "example": "Senha@123"
            },
            "status": {
              "type": "string",
              "enum": ["active", "inactive"],
              "example": "active"
            },
            "roleId": {
              "type": "string",
              "example": "rol_01JK9Q0P4K1BT5JSK66RSC5HK9"
            },
            "customerId": {
              "type": "string",
              "example": "cust_01J4J2ZGBCZZTN6EHR6T52FHS3"
            }
          }
        },
        "UpdateDashboardUserRequest": {
          "type": "object",
          "required": ["id"],
          "properties": {
            "id": {
              "type": "string",
              "example": "usr_01J4J62RCMS5DTFYNTD2NCHZE0"
            },
            "name": {
              "type": "string",
              "example": "João Carlos Silva"
            },
            "email": {
              "type": "string",
              "format": "email",
              "example": "joao.carlos@example.com"
            },
            "cpf": {
              "type": "string",
              "example": "12345678900"
            },
            "phone": {
              "type": "string",
              "example": "11988888888"
            },
            "profileImage": {
              "type": "string",
              "format": "uri",
              "example": "https://storage.googleapis.com/byefive-public/users/profile-updated.png"
            },
            "password": {
              "type": "string",
              "format": "password",
              "example": "NovaSenha@123"
            },
            "status": {
              "type": "string",
              "enum": ["active", "inactive"],
              "example": "active"
            },
            "roleId": {
              "type": "string",
              "example": "rol_01JK9Q0P4K1BT5JSK66RSC5HK9"
            }
          }
        },
        "CreateBrandDashboardUserRequest": {
          "type": "object",
          "required": [
            "name",
            "email",
            "cpf",
            "phone",
            "password",
            "roleId",
            "customerId"
          ],
          "properties": {
            "name": {
              "type": "string",
              "example": "João Silva"
            },
            "email": {
              "type": "string",
              "format": "email",
              "example": "joao.silva@example.com"
            },
            "cpf": {
              "type": "string",
              "example": "12345678900"
            },
            "phone": {
              "type": "string",
              "example": "11999999999"
            },
            "profileImage": {
              "type": "string",
              "format": "uri",
              "example": "https://storage.googleapis.com/byefive-public/users/profile.png"
            },
            "password": {
              "type": "string",
              "format": "password",
              "example": "Senha@123"
            },
            "status": {
              "type": "string",
              "enum": ["active", "inactive"],
              "example": "active"
            },
            "roleId": {
              "type": "string",
              "example": "rol_01JK9Q0P4K1BT5JSK66RSC5HK9"
            },
            "customerId": {
              "type": "string",
              "example": "cust_01J4J2ZGBCZZTN6EHR6T52FHS3"
            }
          }
        },
        "CreateDealerDashboardUserRequest": {
          "type": "object",
          "required": [
            "name",
            "email",
            "cpf",
            "phone",
            "password",
            "roleId",
            "customerId"
          ],
          "properties": {
            "name": {
              "type": "string",
              "example": "João Silva"
            },
            "email": {
              "type": "string",
              "format": "email",
              "example": "joao.silva@example.com"
            },
            "cpf": {
              "type": "string",
              "example": "12345678900"
            },
            "phone": {
              "type": "string",
              "example": "11999999999"
            },
            "profileImage": {
              "type": "string",
              "format": "uri",
              "example": "https://storage.googleapis.com/byefive-public/users/profile.png"
            },
            "password": {
              "type": "string",
              "format": "password",
              "example": "Senha@123"
            },
            "status": {
              "type": "string",
              "enum": ["active", "inactive"],
              "example": "active"
            },
            "roleId": {
              "type": "string",
              "example": "rol_01JK9Q0P4K1BT5JSK66RSC5HK9"
            },
            "customerId": {
              "type": "string",
              "example": "cust_01J4J2ZGBCZZTN6EHR6T52FHS3"
            }
          }
        },
        "CreateHybridDashboardUserRequest": {
          "type": "object",
          "required": [
            "name",
            "email",
            "cpf",
            "phone",
            "password",
            "roleId",
            "customerId"
          ],
          "properties": {
            "name": {
              "type": "string",
              "example": "João Silva"
            },
            "email": {
              "type": "string",
              "format": "email",
              "example": "joao.silva@example.com"
            },
            "cpf": {
              "type": "string",
              "example": "12345678900"
            },
            "phone": {
              "type": "string",
              "example": "11999999999"
            },
            "profileImage": {
              "type": "string",
              "format": "uri",
              "example": "https://storage.googleapis.com/byefive-public/users/profile.png"
            },
            "password": {
              "type": "string",
              "format": "password",
              "example": "Senha@123"
            },
            "status": {
              "type": "string",
              "enum": ["active", "inactive"],
              "example": "active"
            },
            "roleId": {
              "type": "string",
              "example": "rol_01JK9Q0P4K1BT5JSK66RSC5HK9"
            },
            "customerId": {
              "type": "string",
              "example": "cust_01J4J2ZGBCZZTN6EHR6T52FHS3"
            }
          }
        },
        "CheckEmailCpfRequest": {
          "type": "object",
          "properties": {
            "email": {
              "type": "string",
              "format": "email",
              "example": "joao.silva@example.com"
            },
            "cpf": {
              "type": "string",
              "example": "12345678900"
            }
          }
        },
        "EmailCpfExistsResponse": {
          "type": "object",
          "properties": {
            "exists": {
              "type": "boolean",
              "example": true
            },
            "field": {
              "type": "string",
              "enum": ["email", "cpf"],
              "example": "email"
            }
          }
        },
        "UpdateUserStatusRequest": {
          "type": "object",
          "required": ["status"],
          "properties": {
            "status": {
              "type": "string",
              "enum": ["active", "inactive"],
              "example": "inactive"
            }
          }
        },
        "UpdatePasswordRequest": {
          "type": "object",
          "required": ["userId", "newPassword"],
          "properties": {
            "userId": {
              "type": "string",
              "example": "usr_01J4J62RCMS5DTFYNTD2NCHZE0"
            },
            "newPassword": {
              "type": "string",
              "format": "password",
              "example": "NovaSenha@123"
            }
          }
        },
        "UpdateTermsRequest": {
          "type": "object",
          "required": ["termsAccepted"],
          "properties": {
            "termsAccepted": {
              "type": "boolean",
              "example": true
            }
          }
        },
        "InteractionResponse": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "example": "intr_01JK9QSPB43JQ4B5JTZDYTG7E4"
            },
            "professionalId": {
              "type": "string",
              "example": "prf_01JJZRMFRY03PN3KVHHNJW8XZ7"
            },
            "type": {
              "type": "string",
              "enum": ["pdv_visit", "product_scan", "question"],
              "example": "pdv_visit"
            },
            "metadata": {
              "type": "object",
              "additionalProperties": true,
              "example": {
                "pdvId": "pdv_01J6T5MA227QN594Z5D7SKCWBE",
                "timestamp": "2024-05-15T14:30:00Z",
                "latitude": -23.55052,
                "longitude": -46.633309
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time"
            }
          }
        },
        "PdvResponse": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "example": "pdv_01J6T5MA227QN594Z5D7SKCWBE"
            },
            "name": {
              "type": "string",
              "example": "Farmácia Saúde Total"
            },
            "document": {
              "type": "string",
              "example": "12345678000190"
            },
            "documentType": {
              "type": "string",
              "enum": ["cnpj", "cpf"],
              "example": "cnpj"
            },
            "networkId": {
              "type": "string",
              "example": "pnt_01HWD6QTYEVTC3K6CB6GTP52J0"
            },
            "customerId": {
              "type": "string",
              "example": "cust_01J1TSMZSMQAE9GX61HV7F6QRF"
            },
            "status": {
              "type": "string",
              "enum": ["active", "inactive", "pending"],
              "example": "active"
            },
            "address": {
              "$ref": "#/components/schemas/AddressResponse"
            },
            "createdAt": {
              "type": "string",
              "format": "date-time"
            },
            "updatedAt": {
              "type": "string",
              "format": "date-time"
            }
          }
        },
        "AddressResponse": {
          "type": "object",
          "properties": {
            "street": {
              "type": "string",
              "example": "Avenida Paulista"
            },
            "number": {
              "type": "string",
              "example": "1000"
            },
            "complement": {
              "type": "string",
              "example": "Sala 123"
            },
            "district": {
              "type": "string",
              "example": "Bela Vista"
            },
            "city": {
              "type": "string",
              "example": "São Paulo"
            },
            "state": {
              "type": "string",
              "example": "SP"
            },
            "zipCode": {
              "type": "string",
              "example": "01310100"
            },
            "country": {
              "type": "string",
              "example": "Brasil"
            },
            "latitude": {
              "type": "number",
              "format": "float",
              "example": -23.55052
            },
            "longitude": {
              "type": "number",
              "format": "float",
              "example": -46.633309
            }
          }
        },
        "AddressRequest": {
          "type": "object",
          "required": [
            "street",
            "number",
            "district",
            "city",
            "state",
            "zipCode",
            "country"
          ],
          "properties": {
            "street": {
              "type": "string",
              "example": "Avenida Paulista"
            },
            "number": {
              "type": "string",
              "example": "1000"
            },
            "complement": {
              "type": "string",
              "example": "Sala 123"
            },
            "district": {
              "type": "string",
              "example": "Bela Vista"
            },
            "city": {
              "type": "string",
              "example": "São Paulo"
            },
            "state": {
              "type": "string",
              "example": "SP"
            },
            "zipCode": {
              "type": "string",
              "example": "01310100"
            },
            "country": {
              "type": "string",
              "example": "Brasil"
            },
            "latitude": {
              "type": "number",
              "format": "float",
              "example": -23.55052
            },
            "longitude": {
              "type": "number",
              "format": "float",
              "example": -46.633309
            }
          }
        },
        "ErrorResponse": {
          "type": "object",
          "properties": {
            "statusCode": {
              "type": "integer",
              "example": 400
            },
            "message": {
              "type": "string",
              "example": "Requisição inválida"
            },
            "error": {
              "type": "string",
              "example": "Bad Request"
            }
          }
        },
        "Pagination": {
          "type": "object",
          "properties": {
            "page": {
              "type": "integer",
              "example": 1
            },
            "size": {
              "type": "integer",
              "example": 10
            },
            "total": {
              "type": "integer",
              "example": 42
            },
            "pages": {
              "type": "integer",
              "example": 5
            }
          }
        },
        "CreateUpdatePdvAddressRequest": {
          "type": "object",
          "required": [
            "street",
            "number",
            "district",
            "city",
            "state",
            "zipCode"
          ],
          "properties": {
            "street": {
              "type": "string",
              "example": "Rua das Flores"
            },
            "number": {
              "type": "string",
              "example": "123"
            },
            "complement": {
              "type": "string",
              "example": "Sala 45"
            },
            "district": {
              "type": "string",
              "example": "Centro"
            },
            "city": {
              "type": "string",
              "example": "São Paulo"
            },
            "state": {
              "type": "string",
              "example": "SP"
            },
            "zipCode": {
              "type": "string",
              "example": "01001000"
            },
            "country": {
              "type": "string",
              "example": "Brasil"
            }
          }
        },
        "CreateRequestedPdvRequest": {
          "type": "object",
          "required": ["name", "address"],
          "properties": {
            "name": {
              "type": "string",
              "example": "Salão Beauty Hair"
            },
            "address": {
              "$ref": "#/components/schemas/CreateUpdatePdvAddressRequest"
            }
          }
        },
        "ApproveRequestedPdvRequest": {
          "type": "object",
          "required": ["document", "documentType"],
          "properties": {
            "document": {
              "type": "string",
              "example": "12345678000190"
            },
            "documentType": {
              "type": "string",
              "enum": ["cnpj", "cpf"],
              "example": "cnpj"
            },
            "networkId": {
              "type": "string",
              "example": "pnt_01HWD6QTYEVTC3K6CB6GTP52J0"
            },
            "customerId": {
              "type": "string",
              "example": "cust_01J1TSMZSMQAE9GX61HV7F6QRF"
            }
          }
        },
        "RejectRequestedPdvRequest": {
          "type": "object",
          "required": ["reason"],
          "properties": {
            "reason": {
              "type": "string",
              "example": "PDV já existe no sistema com outro nome"
            }
          }
        },
        "CreateCustomerAddressRequest": {
          "type": "object",
          "required": [
            "street",
            "number",
            "district",
            "city",
            "state",
            "zipCode"
          ],
          "properties": {
            "street": {
              "type": "string",
              "example": "Avenida Paulista"
            },
            "number": {
              "type": "string",
              "example": "1000"
            },
            "complement": {
              "type": "string",
              "example": "Sala 123"
            },
            "district": {
              "type": "string",
              "example": "Bela Vista"
            },
            "city": {
              "type": "string",
              "example": "São Paulo"
            },
            "state": {
              "type": "string",
              "example": "SP"
            },
            "zipCode": {
              "type": "string",
              "example": "01310100"
            },
            "country": {
              "type": "string",
              "example": "Brasil"
            }
          }
        },
        "UpdateCustomerBrandsRequest": {
          "type": "object",
          "required": ["brandIds"],
          "properties": {
            "brandIds": {
              "type": "array",
              "items": {
                "type": "string",
                "example": "cust_01HWXCP0R703NBJT9HENA2FPD3"
              }
            }
          }
        },
        "UpdateCustomerModulesRequest": {
          "type": "object",
          "required": ["moduleIds"],
          "properties": {
            "moduleIds": {
              "type": "array",
              "items": {
                "type": "string",
                "example": "fnc_01HV2GXB6NH738XKZ73GJQGN40"
              }
            }
          }
        },
        "AddCustomerSubscriptionRequest": {
          "type": "object",
          "required": ["subscriptionId"],
          "properties": {
            "subscriptionId": {
              "type": "string",
              "example": "sub_01JK9Q0P5NX98PK1J3QETAQ6Y4"
            },
            "expiresAt": {
              "type": "string",
              "format": "date-time"
            }
          }
        },
        "RemoveCustomerSubscriptionRequest": {
          "type": "object",
          "required": ["subscriptionId"],
          "properties": {
            "subscriptionId": {
              "type": "string",
              "example": "sub_01JK9Q0P5NX98PK1J3QETAQ6Y4"
            }
          }
        },
        "CreateInteractionRequest": {
          "type": "object",
          "required": ["professionalId", "type", "metadata"],
          "properties": {
            "professionalId": {
              "type": "string",
              "example": "prf_01JJZRMFRY03PN3KVHHNJW8XZ7"
            },
            "type": {
              "type": "string",
              "enum": ["pdv_visit", "product_scan", "question"],
              "example": "pdv_visit"
            },
            "metadata": {
              "type": "object",
              "additionalProperties": true,
              "example": {
                "pdvId": "pdv_01J6T5MA227QN594Z5D7SKCWBE",
                "timestamp": "2025-05-15T14:30:00Z",
                "latitude": -23.55052,
                "longitude": -46.633309
              }
            }
          }
        },
        "CreateProfessionalAddressRequest": {
          "type": "object",
          "required": [
            "street",
            "number",
            "district",
            "city",
            "state",
            "zipCode"
          ],
          "properties": {
            "street": {
              "type": "string",
              "example": "Rua dos Profissionais"
            },
            "number": {
              "type": "string",
              "example": "456"
            },
            "complement": {
              "type": "string",
              "example": "Sala 78"
            },
            "district": {
              "type": "string",
              "example": "Jardins"
            },
            "city": {
              "type": "string",
              "example": "São Paulo"
            },
            "state": {
              "type": "string",
              "example": "SP"
            },
            "zipCode": {
              "type": "string",
              "example": "01452000"
            },
            "country": {
              "type": "string",
              "example": "Brasil"
            }
          }
        },
        "CreateProfessionalConfigRequest": {
          "type": "object",
          "properties": {
            "isPrivate": {
              "type": "boolean",
              "example": false
            },
            "status": {
              "type": "string",
              "enum": ["available", "unavailable"],
              "example": "available"
            }
          }
        },
        "UpdateProfessionalStatusRequest": {
          "type": "object",
          "required": ["status"],
          "properties": {
            "status": {
              "type": "string",
              "enum": ["active", "inactive", "pending"],
              "example": "active"
            }
          }
        }
      },
      "securitySchemes": {
        "bearerAuth": {
          "type": "http",
          "scheme": "bearer",
          "bearerFormat": "JWT"
        },
        "apiKeyAuth": {
          "type": "apiKey",
          "in": "header",
          "name": "X-API-KEY"
        }
      },
      "responses": {
        "BadRequestResponse": {
          "description": "Requisição inválida ou mal formada",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ErrorResponse"
              }
            }
          }
        },
        "UnauthorizedResponse": {
          "description": "Autenticação necessária ou token inválido",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ErrorResponse"
              }
            }
          }
        },
        "ForbiddenResponse": {
          "description": "Permissão negada para o recurso",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ErrorResponse"
              }
            }
          }
        },
        "NotFoundResponse": {
          "description": "Recurso não encontrado",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ErrorResponse"
              }
            }
          }
        }
      }
    }
  }
}
